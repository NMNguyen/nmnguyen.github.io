{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/modals/PinelineStage/AddStageModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/modals/PinelineStage/AddStageModal.vue","mtime":1557885684550},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PinelineState from \"../../../models/PipelineStage\";\nimport { mapGetters, mapActions } from 'vuex';\n\nvar _ = require('lodash');\n\nimport { messages } from \"../../../messages\";\nexport default {\n  name: \"AddStagePipeline\",\n  props: {\n    showModal: {\n      type: Boolean,\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'new'\n    },\n    stageData: {\n      type: Object,\n      default: function _default() {\n        return null;\n      }\n    },\n    titleStage: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      showModalAddState: false,\n      selectedOptionAction: null,\n      currentTitleStage: '',\n      currentState: null,\n      optionsAction: [{\n        value: null,\n        text: 'Available Stage Actions',\n        disabled: true\n      }, {\n        value: 'a',\n        text: 'Send Email/SMS'\n      }, {\n        value: 'b',\n        text: 'Send Questionnaire'\n      }, {\n        value: 'c',\n        text: 'Team Feedback'\n      }, {\n        value: 'd',\n        text: 'Candidate Scorecards'\n      }],\n      isErrorForm: {\n        stageNameInput: false,\n        stageType: false\n      },\n      isProcessing: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['cachePipeline', 'listPipelineStage', 'currentCompany'])),\n  methods: _objectSpread({}, mapActions(['currentPipeline', 'setCachePipeline', 'setListPipelineStage']), {\n    handleOpenModal: function () {\n      var _handleOpenModal = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isErrorForm = {\n                  stageNameInput: false,\n                  stageType: false\n                };\n\n                if (!(this.listPipelineStage.length == 0)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 4;\n                return new PinelineState().getAllStages('default').then(function (data) {\n                  _this.setListPipelineStage(data);\n\n                  console.log(data);\n                });\n\n              case 4:\n                this.currentTitleStage = this.titleStage;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleOpenModal() {\n        return _handleOpenModal.apply(this, arguments);\n      }\n\n      return handleOpenModal;\n    }(),\n    saveChange: function saveChange() {\n      if (this.stageData == null) {\n        this.isErrorForm.stageType = true;\n      } else {\n        this.isErrorForm.stageType = false;\n      }\n\n      if (this.currentTitleStage.trim() == '') {\n        this.isErrorForm.stageNameInput = true;\n      } else {\n        this.isErrorForm.stageNameInput = false;\n      }\n\n      if (this.isErrorForm.stageType || this.isErrorForm.stageNameInput) {\n        return;\n      }\n\n      switch (this.type) {\n        case 'new':\n          this.createPipelineStage();\n          break;\n\n        case 'edit':\n          this.editPipelineStage();\n          break;\n      }\n    },\n    createPipelineStage: function createPipelineStage() {\n      var _newPipelineStage = {};\n\n      var lengthListStage = _.sumBy(this.cachePipeline.list_state, function (state) {\n        return state.showInPositionPipelineStageModal == true;\n      });\n\n      Object.assign(_newPipelineStage, this.stageData);\n      _newPipelineStage.title = this.currentTitleStage;\n      _newPipelineStage.id = '';\n      _newPipelineStage.pipeline_id = '';\n      _newPipelineStage.deleted = false;\n      _newPipelineStage.index = lengthListStage + 1;\n      _newPipelineStage.showInPositionPipelineStageModal = true;\n      this.cachePipeline.list_state.push(_newPipelineStage);\n      this.handleCloseModal();\n    },\n    editPipelineStage: function editPipelineStage() {\n      var _this2 = this;\n\n      var _newPipelineStage = {};\n      var findStageChanged = this.listPipelineStage.find(function (stage) {\n        return stage.stage_type == _this2.stageData.stage_type;\n      });\n      Object.assign(_newPipelineStage, findStageChanged);\n      _newPipelineStage.pipeline_id = this.stageData.pipeline_id;\n      _newPipelineStage.id = this.stageData.id;\n      _newPipelineStage.title = this.currentTitleStage;\n      _newPipelineStage.deleted = false;\n      _newPipelineStage.index = this.stageData.index;\n      _newPipelineStage.showInPositionPipelineStageModal = true;\n      this.cachePipeline.list_state.splice(this.stageData.indexInCurrentArray, 1, _newPipelineStage);\n      this.setCachePipeline(this.cachePipeline);\n      this.handleCloseModal();\n    },\n    handleCloseModal: function handleCloseModal() {\n      this.$emit('handleClose');\n    }\n  })\n};",{"version":3,"sources":["AddStageModal.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <b-modal\n        @show=\"handleOpenModal\"\n        no-close-on-esc\n        no-close-on-backdrop\n        v-model=\"showModal\">\n        <template slot=\"modal-header\" slot-scope=\"{ close }\">\n            <h1>{{messages.SR_007_MODAL_STAGE_TITLE}}</h1>\n            <b-button size=\"sm\" class=\"button-add-pipeline\" variant=\"secondary\" @click=\"handleCloseModal()\">\n                <i class=\"fa fa-times\"></i>\n            </b-button>\n        </template>\n        <div>\n            <h5>{{messages.SR_007_MODAL_STAGE_INPUT_TITLE}}</h5>\n            <b-form-input :class=\"{'isError':isErrorForm.stageNameInput}\" v-model=\"currentTitleStage\" :placeholder=\"messages.SR_007_MODAL_STAGE_INPUT_REQUIRED\"></b-form-input>\n            <div v-if=\"stageData == null || (stageData != null && stageData.stage_type != 'applied')\">\n                <h5 style=\"margin-top:10px\">{{messages.SR_007_MODAL_STAGE_STAGE_TITLE}}</h5>\n                <b-form-select v-model=\"stageData.stage_type\" class=\"mb-3 custom-select\" :class=\"{'isError':isErrorForm.stageType}\" v-if=\"type=='edit'\">\n                    <option :value=\"null\" disabled>{{messages.SR_007_MODAL_STAGE_STAGE_TITLE}}</option>\n                    <option :value=\"stage.stage_type\" v-for=\"stage in listPipelineStage\" v-if=\"!stage.disabledRemove\">{{stage.title}}</option>\n                </b-form-select>\n                <b-form-select v-model=\"stageData\" class=\"mb-3 custom-select\" :class=\"{'isError':isErrorForm.stageType}\" v-else>\n                    <option :value=\"null\" disabled>{{messages.SR_007_MODAL_STAGE_STAGE_TITLE}}</option>\n                    <option :value=\"stage\" v-for=\"stage in listPipelineStage\" v-if=\"!stage.disabledRemove\">{{stage.title}}</option>\n                </b-form-select>\n            </div>\n        </div>\n        <div>\n            <h5>{{messages.SR_007_MODAL_STAGE_STAGE_ACTIONS}}</h5>\n            <p>{{messages.SR_007_MODAL_STAGE_STAGE_ACTIONS_DESCRIPTION}}</p>\n            <b-form-select v-model=\"selectedOptionAction\" :options=\"optionsAction\" class=\"mb-3\">\n            </b-form-select>\n        </div>\n        <template slot=\"modal-footer\" slot-scope=\"{ ok }\">\n            <!-- Emulate built in modal footer ok and cancel button actions -->\n            <p v-if=\"isProcessing\">{{messages.SR_007_MODAL_STAGE_ADDING}}</p>\n            <b-button size=\"sm\" variant=\"primary\" class=\"btn btn-blue\" @click=\"saveChange()\">\n                <i class=\"fa fa-save\"></i> {{messages.SR_007_MODAL_PIPELINE_BUTTON_SAVE}}\n            </b-button>\n        </template>\n    </b-modal>\n</template>\n\n<script>\n    import PinelineState from \"../../../models/PipelineStage\";\n    import {mapGetters, mapActions} from 'vuex';\n    const _ = require('lodash');\n    import {messages} from \"../../../messages\";\n\n    export default {\n\n        name: \"AddStagePipeline\",\n        props: {\n            showModal: {\n                type: Boolean,\n                default: false\n            },\n            type: {\n                type: String,\n                default: 'new'\n            },\n            stageData:{\n                type: Object,\n                default:()=> null,\n            },\n            titleStage:{\n                type: String,\n                default: '',\n            }\n        },\n        data() {\n            return {\n                showModalAddState:false,\n                selectedOptionAction: null,\n                currentTitleStage: '',\n                currentState: null,\n                optionsAction: [\n                    { value: null, text: 'Available Stage Actions' , disabled: true},\n                    { value: 'a', text: 'Send Email/SMS' },\n                    { value: 'b', text: 'Send Questionnaire' },\n                    { value: 'c', text: 'Team Feedback' },\n                    { value: 'd', text: 'Candidate Scorecards'},\n                ],\n                isErrorForm: {\n                    stageNameInput: false,\n                    stageType: false,\n                },\n                isProcessing: false\n        }\n        },\n        computed:{\n            ...mapGetters([\n                'cachePipeline',\n                'listPipelineStage',\n                'currentCompany'\n            ]),\n        },\n        methods: {\n            ...mapActions([\n               'currentPipeline',\n                'setCachePipeline',\n                'setListPipelineStage'\n            ]),\n            async handleOpenModal(){\n                this.isErrorForm =  {\n                    stageNameInput: false,\n                    stageType: false,\n                }\n                if (this.listPipelineStage.length == 0){\n                    await new PinelineState().getAllStages('default').then((data)=>{\n                        this.setListPipelineStage(data);\n                        console.log(data);\n                    });\n                }\n                this.currentTitleStage = this.titleStage;\n            },\n            saveChange(){\n                if (this.stageData == null){\n                    this.isErrorForm.stageType = true;\n                }else{\n                    this.isErrorForm.stageType = false;\n                }\n                if (this.currentTitleStage.trim() == ''){\n                    this.isErrorForm.stageNameInput = true;\n                }else{\n                    this.isErrorForm.stageNameInput = false;\n                }\n                if (this.isErrorForm.stageType || this.isErrorForm.stageNameInput){\n                    return;\n                }\n                switch (this.type) {\n                    case 'new':\n                        this.createPipelineStage();\n                        break;\n                    case 'edit':\n                        this.editPipelineStage();\n                        break;\n                }\n            },\n            createPipelineStage(){\n                let _newPipelineStage = {};\n                let lengthListStage = _.sumBy(this.cachePipeline.list_state, (state)=>{\n                    return state.showInPositionPipelineStageModal == true;\n                });\n                Object.assign(_newPipelineStage, this.stageData);\n                _newPipelineStage.title = this.currentTitleStage;\n                _newPipelineStage.id = '';\n                _newPipelineStage.pipeline_id = '';\n                _newPipelineStage.deleted = false;\n                _newPipelineStage.index = lengthListStage + 1;\n                _newPipelineStage.showInPositionPipelineStageModal = true;\n                this.cachePipeline.list_state.push(_newPipelineStage);\n                this.handleCloseModal();\n            },\n            editPipelineStage( ){\n                let _newPipelineStage = {};\n                let findStageChanged = this.listPipelineStage.find((stage)=>{\n                    return stage.stage_type == this.stageData.stage_type;\n                })\n                Object.assign(_newPipelineStage, findStageChanged);\n                _newPipelineStage.pipeline_id = this.stageData.pipeline_id;\n                _newPipelineStage.id = this.stageData.id;\n                _newPipelineStage.title = this.currentTitleStage;\n                _newPipelineStage.deleted = false;\n                _newPipelineStage.index = this.stageData.index;\n                _newPipelineStage.showInPositionPipelineStageModal = true;\n                this.cachePipeline.list_state.splice(this.stageData.indexInCurrentArray, 1 , _newPipelineStage);\n                this.setCachePipeline(this.cachePipeline);\n                this.handleCloseModal();\n            },\n            handleCloseModal() {\n                this.$emit('handleClose')\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .flex-box-right i{\n        margin-left:10px;\n        font-size:10px;\n    }\n    .btn-custom{\n        margin-top:10px;\n        font-size: 12px !important;\n        height: initial !important;\n        padding: 2px 8px;\n        background-color: #5ac0e5 !important;\n        color: #fff !important;\n        border:none;\n    }\n    .btn-custom:hover{\n        font-size: 12px;\n        background-color: #4cabcd !important;\n        color: #fff !important;\n    }\n    .state-item{\n        justify-content: space-between;\n        display:flex;\n        align-content:center;\n        background:#edeff0;\n        height:40px;\n        padding:10px;\n    }\n    .btn-blue{\n        border:none;\n        padding:5px 12px;\n        font-weight:bold;\n        /*font-size: 21px !important;*/\n    }\n    .custom-select{\n        width:176px;\n    }\n</style>\n<style scoped>\n    >>>.modal-header{\n        border-bottom:none;\n        padding-bottom:0px;\n    }\n    >>>.modal.show .modal-dialog{\n        padding-left: 30px;\n        padding-right: 30px;\n        border-radius: 5px;\n        background: #edeff0;\n    }\n    >>>.modal-content{\n        border:none;\n    }\n    >>>.modal-body{\n        padding-top:0px;\n    }\n    >>>.modal-footer{\n        border-top:none;\n        background-color:#f9fafa;\n        border-top: 1px solid #edeff0;\n    }\n    >>>.button-add-pipeline{\n        padding: 10px;\n        padding-left: 15px;\n        position: absolute;\n        right: 0;\n        border: none;\n        font-weight: bold;\n        background: #edeff0;\n        top: 0;\n        font-size:21px!important;\n        color:#4c555c;\n    }\n</style>\n"],"sourceRoot":"src/components/modals/PinelineStage"}]}