{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js!/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/tasks/CreateTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/tasks/CreateTask.vue","mtime":1557830879584},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations } from \"vuex\";\nimport { Datetime } from 'vue-datetime';\nimport User from \"../../models/User\";\nexport default {\n  name: \"createTask\",\n  components: {\n    datetime: Datetime\n  },\n  data: function data() {\n    return {\n      assignee: this.currentUser\n    };\n  },\n  mounted: function mounted() {// debugger;\n  },\n  watch: {\n    currentUser: function currentUser(val, oldVal) {\n      // debugger;\n      if (this.assignee == null) {\n        this.assignee = val;\n      }\n    }\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser', 'currentCompany', 'getTask', 'modals/addTask', 'companyUsers' // ...\n  ]), {\n    modalFlag: {\n      get: function get() {\n        return this['modals/addTask'];\n      },\n      set: function set(val) {\n        this['modals/showAddTask'](val);\n      }\n    }\n  }),\n  methods: _objectSpread({}, mapMutations(['modals/showAddTask', 'clearCurrentTask']), {\n    insertTask: function insertTask() {\n      var _this = this;\n\n      // debugger;\n      this.getTask.company_id = this.currentCompany.id;\n      this.getTask.upsert().then(function (task) {\n        console.info(\"save task successfully\");\n        _this.modalFlag = false;\n\n        _this.clearCurrentTask();\n      });\n    }\n  })\n};",null]}