{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js!/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/General.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/General.vue","mtime":1557830879581},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport { mapGetters } from 'vuex';\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\nexport default Vue.extend({\n  data: function data() {\n    return {\n      saveflag: false,\n      name: ''\n    };\n  },\n  components: {\n    ModalWrapper: ModalWrapper\n  },\n  props: {},\n  computed: _objectSpread({}, mapGetters(['currentUser', 'currentCompany'])),\n  watch: {\n    currentCompany: function currentCompany(company) {\n      var self = this;\n      self.name = company.name;\n    }\n  },\n  mounted: function mounted() {\n    var self = this;\n\n    if (self.currentCompany) {\n      self.name = self.currentCompany.name;\n    }\n  },\n  methods: {\n    updateCompany: function updateCompany() {\n      var self = this;\n      self.currentCompany.name = self.name;\n      self.currentCompany.update().then(function () {\n        self.saveflag = true;\n        setTimeout(function () {\n          self.saveflag = false;\n        }, 2000);\n      }).catch(function (err) {});\n    }\n  }\n});",null]}