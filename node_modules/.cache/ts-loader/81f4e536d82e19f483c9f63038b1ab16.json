{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js!/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Data/app.cloudjet.work/src/models/Pipeline.ts","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/models/Pipeline.ts","mtime":1557830879589},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport Model from \"./base\";\nimport PipelineStage from \"@/models/PipelineStage\";\nimport { messages } from \"@/messages\";\n\nvar Pipeline =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Pipeline, _Model);\n\n  function Pipeline() {\n    var _this;\n\n    _classCallCheck(this, Pipeline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pipeline).call(this, \"Pipeline\"));\n    _this.title = \"\";\n    _this.company_id = \"\";\n    _this.is_default = false;\n    return _this;\n  }\n\n  _createClass(Pipeline, [{\n    key: \"deleteAllStateByID\",\n    value: function deleteAllStateByID(position_stage_id) {\n      if (position_stage_id) {\n        {\n          var modelCollection = this.firestore.collection('PipelineStage');\n          modelCollection.where(\"pipeline_id\", \"==\", position_stage_id).get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (docSnapshot) {\n              docSnapshot.ref.delete();\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"createPipelineDefault\",\n    value: function () {\n      var _createPipelineDefault = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(company_id) {\n        var defaultPineLine;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                defaultPineLine = new Pipeline();\n                defaultPineLine.title = messages.SR_007_DEFAULT_PIPELINE_TITLE;\n                defaultPineLine.company_id = company_id;\n                defaultPineLine.is_default = true;\n                defaultPineLine.insert().then(function (pipeline) {\n                  new PipelineStage().getAllStages(pipeline.id);\n                  Object.assign(defaultPineLine, pipeline);\n                });\n                return _context.abrupt(\"return\", defaultPineLine);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function createPipelineDefault(_x) {\n        return _createPipelineDefault.apply(this, arguments);\n      }\n\n      return createPipelineDefault;\n    }()\n  }, {\n    key: \"getAllPipelines\",\n    value: function () {\n      var _getAllPipelines = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(company_id) {\n        var results, that, modelCollection;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                results = new Array();\n                that = this;\n\n                if (!company_id) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                modelCollection = this.firestore.collection(this.COLLECTION);\n                _context3.next = 6;\n                return modelCollection.where(\"company_id\", \"==\", company_id).orderBy('is_default', 'desc').orderBy('updatedAt').get().then(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee2(querySnapshot) {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!(querySnapshot.empty == true)) {\n                              _context2.next = 5;\n                              break;\n                            }\n\n                            _context2.next = 3;\n                            return that.createPipelineDefault(company_id).then(function (pipeline) {\n                              results.push(pipeline);\n                            });\n\n                          case 3:\n                            _context2.next = 6;\n                            break;\n\n                          case 5:\n                            querySnapshot.forEach(function (docSnapshot) {\n                              var record = new Pipeline();\n                              Object.assign(record, docSnapshot.data());\n                              record.id = docSnapshot.id;\n                              results.push(record);\n                            });\n\n                          case 6:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 6:\n                _context3.next = 8;\n                return results;\n\n              case 8:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getAllPipelines(_x2) {\n        return _getAllPipelines.apply(this, arguments);\n      }\n\n      return getAllPipelines;\n    }()\n  }]);\n\n  return Pipeline;\n}(Model);\n\nexport { Pipeline as default };",null]}