{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js!/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserNotify.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/UserNotify.vue","mtime":1557830879581},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport { mapGetters } from 'vuex';\nexport default Vue.extend({\n  name: \"UserNotify\",\n  data: function data() {\n    return {\n      meetingRemind: true,\n      candidateAssign: true,\n      taskAssign: true,\n      taskDuel: true,\n      saveflag: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser', 'currentCompany'])),\n  watch: {\n    currentUser: function currentUser(user) {\n      var self = this;\n      self.meetingRemind = user.currentUser.meetingRemind;\n      self.candidateAssign = user.currentUser.candidateAssign;\n      self.taskAssign = user.currentUser.taskAssign;\n      self.taskDuel = user.currentUser.taskDuel;\n    }\n  },\n  mounted: function mounted() {\n    var self = this;\n\n    if (self.currentUser) {\n      self.meetingRemind = self.currentUser.meetingRemind;\n      self.candidateAssign = self.currentUser.candidateAssign;\n      self.taskAssign = self.currentUser.taskAssign;\n      self.taskDuel = self.currentUser.taskDuel;\n    }\n  },\n  methods: {\n    SaveUser: function SaveUser() {\n      var self = this;\n\n      if (self.currentUser) {\n        self.currentUser.meetingRemind = self.meetingRemind;\n        self.currentUser.candidateAssign = self.candidateAssign;\n        self.currentUser.taskAssign = self.taskAssign;\n        self.currentUser.taskDuel = self.taskDuel;\n        self.currentUser.update();\n        self.saveflag = true;\n        setTimeout(function () {\n          self.saveflag = false;\n        }, 2000);\n      }\n    }\n  }\n});",null]}