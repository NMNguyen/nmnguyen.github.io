{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/src/models/Pipeline.ts","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/models/Pipeline.ts","mtime":1557830879589},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport Model from \"./base\";\nimport PipelineStage from \"@/models/PipelineStage\";\nimport { messages } from \"@/messages\";\n\nvar Pipeline =\n/*#__PURE__*/\nfunction (_Model) {\n  _inherits(Pipeline, _Model);\n\n  function Pipeline() {\n    var _this;\n\n    _classCallCheck(this, Pipeline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pipeline).call(this, \"Pipeline\"));\n    _this.title = \"\";\n    _this.company_id = \"\";\n    _this.is_default = false;\n    return _this;\n  }\n\n  _createClass(Pipeline, [{\n    key: \"deleteAllStateByID\",\n    value: function deleteAllStateByID(position_stage_id) {\n      if (position_stage_id) {\n        {\n          var modelCollection = this.firestore.collection('PipelineStage');\n          modelCollection.where(\"pipeline_id\", \"==\", position_stage_id).get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (docSnapshot) {\n              docSnapshot.ref.delete();\n            });\n          });\n        }\n      }\n    }\n  }, {\n    key: \"createPipelineDefault\",\n    value: function () {\n      var _createPipelineDefault = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(company_id) {\n        var defaultPineLine;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                defaultPineLine = new Pipeline();\n                defaultPineLine.title = messages.SR_007_DEFAULT_PIPELINE_TITLE;\n                defaultPineLine.company_id = company_id;\n                defaultPineLine.is_default = true;\n                defaultPineLine.insert().then(function (pipeline) {\n                  new PipelineStage().getAllStages(pipeline.id);\n                  Object.assign(defaultPineLine, pipeline);\n                });\n                return _context.abrupt(\"return\", defaultPineLine);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function createPipelineDefault(_x) {\n        return _createPipelineDefault.apply(this, arguments);\n      }\n\n      return createPipelineDefault;\n    }()\n  }, {\n    key: \"getAllPipelines\",\n    value: function () {\n      var _getAllPipelines = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(company_id) {\n        var results, that, modelCollection;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                results = new Array();\n                that = this;\n\n                if (!company_id) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                modelCollection = this.firestore.collection(this.COLLECTION);\n                _context3.next = 6;\n                return modelCollection.where(\"company_id\", \"==\", company_id).orderBy('is_default', 'desc').orderBy('updatedAt').get().then(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  regeneratorRuntime.mark(function _callee2(querySnapshot) {\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!(querySnapshot.empty == true)) {\n                              _context2.next = 5;\n                              break;\n                            }\n\n                            _context2.next = 3;\n                            return that.createPipelineDefault(company_id).then(function (pipeline) {\n                              results.push(pipeline);\n                            });\n\n                          case 3:\n                            _context2.next = 6;\n                            break;\n\n                          case 5:\n                            querySnapshot.forEach(function (docSnapshot) {\n                              var record = new Pipeline();\n                              Object.assign(record, docSnapshot.data());\n                              record.id = docSnapshot.id;\n                              results.push(record);\n                            });\n\n                          case 6:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x3) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n              case 6:\n                _context3.next = 8;\n                return results;\n\n              case 8:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getAllPipelines(_x2) {\n        return _getAllPipelines.apply(this, arguments);\n      }\n\n      return getAllPipelines;\n    }()\n  }]);\n\n  return Pipeline;\n}(Model);\n\nexport { Pipeline as default };",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/src/models/Pipeline.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAP;AACA,OAAO,aAAP,MAA0B,wBAA1B;AACA,SAAQ,QAAR,QAAuB,YAAvB;;IAEqB,Q;;;;;AA2DjB,sBAAA;AAAA;;AAAA;;AACI,kFAAM,UAAN;AA1DJ,UAAA,KAAA,GAAgB,EAAhB;AACA,UAAA,UAAA,GAAqB,EAArB;AACA,UAAA,UAAA,GAAsB,KAAtB;AAuDA;AAEC;;;;uCAvDyB,iB,EAAyB;AAC/C,UAAI,iBAAJ,EAAuB;AACnB;AACI,cAAM,eAAe,GAAG,KAAK,SAAL,CAAe,UAAf,CAA0B,eAA1B,CAAxB;AACA,UAAA,eAAe,CAAC,KAAhB,CAAsB,aAAtB,EAAqC,IAArC,EAA2C,iBAA3C,EAA8D,GAA9D,GAAoE,IAApE,CAAyE,UAAU,aAAV,EAAuB;AAC5F,YAAA,aAAa,CAAC,OAAd,CAAsB,UAAA,WAAW,EAAG;AAChC,cAAA,WAAW,CAAC,GAAZ,CAAgB,MAAhB;AACH,aAFD;AAGH,WAJD;AAKH;AACJ;AACJ;;;;;;+CAEkC,U;;;;;;AAC3B,gBAAA,e,GAAkB,IAAI,QAAJ,E;AACtB,gBAAA,eAAe,CAAC,KAAhB,GAAwB,QAAQ,CAAC,6BAAjC;AACA,gBAAA,eAAe,CAAC,UAAhB,GAA6B,UAA7B;AACA,gBAAA,eAAe,CAAC,UAAhB,GAA6B,IAA7B;AACA,gBAAA,eAAe,CAAC,MAAhB,GAAyB,IAAzB,CAA8B,UAAC,QAAD,EAAa;AACvC,sBAAI,aAAJ,GAAoB,YAApB,CAAiC,QAAQ,CAAC,EAA1C;AACA,kBAAA,MAAM,CAAC,MAAP,CAAc,eAAd,EAA+B,QAA/B;AACH,iBAHD;iDAIO,e;;;;;;;;;;;;;;;;;;;;;gDAGkB,U;;;;;;AACnB,gBAAA,O,GAAsB,IAAI,KAAJ,E;AACxB,gBAAA,I,GAAO,I;;qBACP,U;;;;;AACM,gBAAA,e,GAAkB,KAAK,SAAL,CAAe,UAAf,CAA0B,KAAK,UAA/B,C;;uBAElB,eAAe,CAAC,KAAhB,CAAsB,YAAtB,EAAoC,IAApC,EAA0C,UAA1C,EACD,OADC,CACO,YADP,EACqB,MADrB,EAED,OAFC,CAEO,WAFP,EAGD,GAHC,GAID,IAJC;AAAA;AAAA;AAAA;AAAA;AAAA,0CAII,kBAAO,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kCACE,aAAa,CAAC,KAAd,IAAuB,IADzB;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAEQ,IAAI,CAAC,qBAAL,CAA2B,UAA3B,EAAuC,IAAvC,CAA4C,UAAC,QAAD,EAAa;AAC3D,8BAAA,OAAO,CAAC,IAAR,CAAa,QAAb;AACH,6BAFK,CAFR;;AAAA;AAAA;AAAA;;AAAA;AAME,4BAAA,aAAa,CAAC,OAAd,CAAsB,UAAA,WAAW,EAAG;AAChC,kCAAI,MAAM,GAAG,IAAI,QAAJ,EAAb;AACA,8BAAA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,WAAW,CAAC,IAAZ,EAAtB;AACA,8BAAA,MAAM,CAAC,EAAP,GAAY,WAAW,CAAC,EAAxB;AACA,8BAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACH,6BALD;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ;;AAAA;AAAA;AAAA;AAAA,oB;;;;uBAmBG,O;;;;;;;;;;;;;;;;;;;;;;EAxDiB,K;;SAAjB,Q","sourcesContent":["import Model from './base';\nimport PipelineStage from \"@/models/PipelineStage\";\nimport {messages} from \"@/messages\";\n\nexport default class Pipeline extends Model {\n\n    title: string = \"\";\n    company_id: string = \"\";\n    is_default: boolean = false;\n\n    public deleteAllStateByID(position_stage_id: string) {\n        if (position_stage_id) {\n            {\n                const modelCollection = this.firestore.collection('PipelineStage');\n                modelCollection.where(\"pipeline_id\", \"==\", position_stage_id).get().then(function (querySnapshot) {\n                    querySnapshot.forEach(docSnapshot => {\n                        docSnapshot.ref.delete();\n                    });\n                })\n            }\n        }\n    }\n\n    public async createPipelineDefault(company_id: string): Promise<Pipeline> {\n        let defaultPineLine = new Pipeline();\n        defaultPineLine.title = messages.SR_007_DEFAULT_PIPELINE_TITLE;\n        defaultPineLine.company_id = company_id;\n        defaultPineLine.is_default = true;\n        defaultPineLine.insert().then((pipeline) => {\n            new PipelineStage().getAllStages(pipeline.id);\n            Object.assign(defaultPineLine, pipeline);\n        });\n        return defaultPineLine;\n    }\n\n    public async getAllPipelines(company_id: string): Promise<Pipeline[]> {\n        const results: Pipeline[] = new Array();\n        let that = this;\n        if (company_id) {\n            const modelCollection = this.firestore.collection(this.COLLECTION);\n\n            await modelCollection.where(\"company_id\", \"==\", company_id)\n                .orderBy('is_default', 'desc')\n                .orderBy('updatedAt')\n                .get()\n                .then(async (querySnapshot) => {\n                    if (querySnapshot.empty == true) {\n                        await that.createPipelineDefault(company_id).then((pipeline) => {\n                            results.push(pipeline);\n                        });\n                    } else {\n                        querySnapshot.forEach(docSnapshot => {\n                            let record = new Pipeline();\n                            Object.assign(record, docSnapshot.data());\n                            record.id = docSnapshot.id;\n                            results.push(record);\n                        });\n                    }\n                })\n        }\n        return await results;\n    }\n\n    constructor() {\n        super(\"Pipeline\");\n    }\n\n}\n"],"sourceRoot":""}]}