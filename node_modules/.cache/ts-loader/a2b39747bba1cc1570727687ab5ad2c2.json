{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/company/pipeline.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/company/pipeline.vue","mtime":1557830879572},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport { mapGetters, mapActions } from 'vuex';\nimport PositionPipelineComponent from \"../PositionPipeline/main.vue\";\nimport AddEditPipeline from \"../modals/PinelineStage/AddEditPipeline.vue\";\nimport Pipeline from '@/models/Pipeline';\nimport PipelineStage from '@/models/PipelineStage';\nimport VueContentLoading from 'vue-content-loading';\nexport default Vue.extend({\n  components: {\n    PositionPipelineComponent: PositionPipelineComponent,\n    AddEditPipeline: AddEditPipeline,\n    VueContentLoading: VueContentLoading\n  },\n  props: {},\n  data: function data() {\n    return {\n      showModal: false,\n      newPositionPipeline: {},\n      type: 'new',\n      currentIndex: 0,\n      isLoading: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['currentCompany', 'listPipeline', 'listPipelineStage', 'currentPipeline', 'currentPipelineStage'])),\n  mounted: function mounted() {\n    var that = this;\n    that.isLoading = true;\n    this.getAllPineline().then(function (data) {\n      that.setListPipeline(data).then(function () {\n        new PipelineStage().getAllStages('default').then(function (data) {\n          that.setListPipelineStage(data);\n        });\n        that.isLoading = false;\n      });\n    });\n  },\n  methods: _objectSpread({}, mapActions(['setListPipelineStage', 'setListPipeline', 'setCurrentPipeline', 'setCurrentPipelineStage']), {\n    getAllPineline: function () {\n      var _getAllPineline = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return new Pipeline().getAllPipelines(this.currentCompany.id);\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAllPineline() {\n        return _getAllPineline.apply(this, arguments);\n      }\n\n      return getAllPineline;\n    }(),\n    handleCloseModalAddPositionPipeline: function handleCloseModalAddPositionPipeline() {\n      this.showModal = false; // this.getAllPineline();\n    },\n    editPipeline: function editPipeline(currentIndex) {\n      this.type = 'edit';\n      this.currentIndex = currentIndex;\n      this.showModal = true;\n    },\n    handleOpen: function handleOpen() {\n      this.showModal = true;\n      this.type = 'new';\n    }\n  })\n});",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/company/pipeline.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;AA2CA,OAAO,GAAP,MAAgB,KAAhB;AAEA,SAAQ,UAAR,EAAoB,UAApB,QAAqC,MAArC;AACA,OAAO,yBAAP;AACA,OAAO,eAAP;AAEA,OAAO,QAAP,MAAqB,mBAArB;AACA,OAAO,aAAP,MAA0B,wBAA1B;AACA,OAAO,iBAAP,MAA8B,qBAA9B;AAEA,eAAe,GAAG,CAAC,MAAJ,CAAW;AACtB,EAAA,UAAU,EAAC;AACP,IAAA,yBAAyB,EAAzB,yBADO;AAEP,IAAA,eAAe,EAAf,eAFO;AAGP,IAAA,iBAAiB,EAAjB;AAHO,GADW;AAMtB,EAAA,KAAK,EAAE,EANe;AAOtB,EAAA,IAPsB,kBAOlB;AACA,WAAM;AACF,MAAA,SAAS,EAAE,KADT;AAEF,MAAA,mBAAmB,EAAE,EAFnB;AAGF,MAAA,IAAI,EAAC,KAHH;AAIF,MAAA,YAAY,EAAC,CAJX;AAKF,MAAA,SAAS,EAAE;AALT,KAAN;AAOH,GAfqB;AAgBtB,EAAA,QAAQ,oBAED,UAAU,CAAC,CACV,gBADU,EAEV,cAFU,EAGV,mBAHU,EAIV,iBAJU,EAKV,sBALU,CAAD,CAFT,CAhBc;AA0BtB,EAAA,OA1BsB,qBA0Bf;AACH,QAAI,IAAI,GAAG,IAAX;AACA,IAAA,IAAI,CAAC,SAAL,GAAiB,IAAjB;AACA,SAAK,cAAL,GAAsB,IAAtB,CAA2B,UAAC,IAAD,EAAQ;AAC/B,MAAA,IAAI,CAAC,eAAL,CAAqB,IAArB,EAA2B,IAA3B,CAAgC,YAAI;AAChC,YAAI,aAAJ,GAAoB,YAApB,CAAiC,SAAjC,EAA4C,IAA5C,CAAiD,UAAC,IAAD,EAAQ;AACrD,UAAA,IAAI,CAAC,oBAAL,CAA0B,IAA1B;AACH,SAFD;AAGA,QAAA,IAAI,CAAC,SAAL,GAAiB,KAAjB;AAEH,OAND;AAOH,KARD;AASH,GAtCqB;AAuCtB,EAAA,OAAO,oBACA,UAAU,CAAC,CACV,sBADU,EAEV,iBAFU,EAGV,oBAHU,EAIV,yBAJU,CAAD,CADV;AAOG,IAAA,cAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQc,IAAI,QAAJ,GAAe,eAAf,CAA+B,KAAK,cAAL,CAAoB,EAAnD,CARd;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWH,IAAA,mCAXG,iDAWgC;AAC/B,WAAK,SAAL,GAAiB,KAAjB,CAD+B,CAE/B;AACH,KAdE;AAeH,IAAA,YAfG,wBAeU,YAfV,EAesB;AACrB,WAAK,IAAL,GAAY,MAAZ;AACA,WAAK,YAAL,GAAoB,YAApB;AACA,WAAK,SAAL,GAAiB,IAAjB;AACH,KAnBE;AAoBH,IAAA,UAAU,EAAE,sBAAA;AACR,WAAK,SAAL,GAAiB,IAAjB;AACA,WAAK,IAAL,GAAY,KAAZ;AACH;AAvBE;AAvCe,CAAX,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport {fauth} from '@/firebase';\nimport {mapGetters, mapActions} from 'vuex';\nimport PositionPipelineComponent from '../PositionPipeline/main.vue';\nimport AddEditPipeline from '../modals/PinelineStage/AddEditPipeline.vue';\n\nimport Pipeline from '@/models/Pipeline';\nimport PipelineStage from '@/models/PipelineStage';\nimport VueContentLoading from 'vue-content-loading';\nimport {messages} from '@/messages/index.ts';\nexport default Vue.extend({\n    components:{\n        PositionPipelineComponent,\n        AddEditPipeline,\n        VueContentLoading\n    },\n    props: {},\n    data(){\n        return{\n            showModal: false,\n            newPositionPipeline: {} as Pipeline,\n            type:'new',\n            currentIndex:0,\n            isLoading: false,\n        }\n    },\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentCompany',\n            'listPipeline',\n            'listPipelineStage',\n            'currentPipeline',\n            'currentPipelineStage'\n        ]),\n    },\n    mounted(){\n        let that = this;\n        that.isLoading = true;\n        this.getAllPineline().then((data)=>{\n            that.setListPipeline(data).then(()=>{\n                new PipelineStage().getAllStages('default').then((data)=>{\n                    that.setListPipelineStage(data);\n                });\n                that.isLoading = false;\n\n            });\n        });\n    },\n    methods: {\n        ...mapActions([\n            'setListPipelineStage',\n            'setListPipeline',\n            'setCurrentPipeline',\n            'setCurrentPipelineStage'\n        ]),\n        async getAllPineline(){\n            return await new Pipeline().getAllPipelines(this.currentCompany.id);\n        },\n\n        handleCloseModalAddPositionPipeline(){\n            this.showModal = false;\n            // this.getAllPineline();\n        },\n        editPipeline(currentIndex){\n            this.type = 'edit';\n            this.currentIndex = currentIndex;\n            this.showModal = true;\n        },\n        handleOpen: function () {\n            this.showModal = true;\n            this.type = 'new';\n        }\n    },\n});\n"],"sourceRoot":""}]}