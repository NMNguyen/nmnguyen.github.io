{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/Analytics/Overview/PhanTichTongQuan.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/Analytics/Overview/PhanTichTongQuan.vue","mtime":1557114387676},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from 'vue';\nimport LineChart from \"@/components/Analytics/Charts/LineChart.vue\";\nimport Momment from 'moment';\n\nvar lineStyle = function lineStyle(color) {\n  return {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    borderColor: color,\n    pointBackgroundColor: color,\n    pointBorderColor: \"white\"\n  };\n};\n\nexport default Vue.extend({\n  name: \"PhanTichTongQuan\",\n  components: {\n    LineChart: LineChart\n  },\n  props: {\n    range: {\n      type: Object,\n      default: {\n        start: Momment().subtract(7, 'd').format(),\n        end: Momment().format()\n      }\n    }\n  },\n  data: function data() {\n    return {\n      chart: {\n        loaded: false,\n        data: {\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }],\n            xAxes: [{\n              type: 'time',\n              time: {\n                unit: 'day',\n                dateFormat: {}\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            labels: {\n              usePointStyle: true\n            }\n          }\n        }\n      }\n    };\n  },\n  methods: {\n    fillTestData: function fillTestData() {\n      var _this = this;\n\n      // this.chart.data.labels = ((n: number)=>{\n      //     const res = [] as any[];\n      //     while (n > 0) res.unshift(`Thang ${n--}`);\n      //     return res;\n      // })(12);\n      var random = function random() {\n        var res = [];\n        var current = Momment(_this.range.start);\n\n        while (current.isBefore(_this.range.end)) {\n          res.push({\n            x: new Date(current.format()),\n            y: Math.round(Math.random() * 10 * Math.random())\n          });\n          current.add(1, 'd');\n        }\n\n        return res;\n      };\n\n      this.chart.data.datasets.push(_objectSpread({}, lineStyle(\"red\"), {\n        label: \"Ứng tuyển\",\n        data: random()\n      }));\n      this.chart.data.datasets.push(_objectSpread({}, lineStyle(\"blue\"), {\n        label: \"Lượt xem\",\n        data: random()\n      }));\n      this.chart.data.datasets.push(_objectSpread({}, lineStyle(\"orange\"), {\n        label: \"Nguồn\",\n        data: random()\n      }));\n      this.chart.data.datasets.push(_objectSpread({}, lineStyle(\"cyan\"), {\n        label: \"Được giới thiệu\",\n        data: random()\n      }));\n      this.chart.data.datasets.push(_objectSpread({}, lineStyle(\"yellow\"), {\n        label: \"Đã tuyển\",\n        data: random()\n      }));\n      this.chart.loaded = true;\n    }\n  },\n  mounted: function mounted() {\n    // for test UI\n    this.fillTestData();\n  }\n});",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/Analytics/Overview/PhanTichTongQuan.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport LineChart from \"@/components/Analytics/Charts/LineChart.vue\";\nimport Momment from 'moment';\n\nconst lineStyle = (color: string):any =>({\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    borderColor: color,\n    pointBackgroundColor: color,\n    pointBorderColor: \"white\",\n});\n\nexport default Vue.extend({\n    name: \"PhanTichTongQuan\",\n    components: {\n        LineChart,\n    },\n\n    props: {\n        range: {\n            type: Object,\n            default: {\n                start: Momment().subtract(7, 'd').format(),\n                end: Momment().format(),\n            },\n        },\n    },\n\n    data() {\n        return {\n            chart: {\n                loaded: false,\n                data: {\n                    datasets: [] as any[],\n                },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }],\n                        xAxes: [\n                            {\n                                type: 'time',\n                                time: {\n                                    unit: 'day',\n                                    dateFormat: {\n\n                                    }\n                                }\n                            }\n                        ],\n                    },\n                    legend: {\n                        display: true,\n                        labels: {\n                            usePointStyle: true,\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    methods: {\n        fillTestData(): void\n        {\n            // this.chart.data.labels = ((n: number)=>{\n            //     const res = [] as any[];\n            //     while (n > 0) res.unshift(`Thang ${n--}`);\n            //     return res;\n            // })(12);\n\n            const random = (): any[] =>{\n                const res = [] as any[];\n                const current: Momment.Moment = Momment(this.range.start);\n                while (current.isBefore(this.range.end)) {\n                    res.push({\n                        x: new Date(current.format()),\n                        y: Math.round(Math.random() * 10 * Math.random()),\n                        // y: replace real data at this day\n                    });\n                    current.add(1, 'd');\n                }\n                return res;\n            };\n            this.chart.data.datasets.push({\n                ...lineStyle(\"red\"),\n                label: \"Ứng tuyển\",\n                data: random(),\n            });\n            this.chart.data.datasets.push({\n                ...lineStyle(\"blue\"),\n                label: \"Lượt xem\",\n                data: random(),\n            });\n            this.chart.data.datasets.push({\n                ...lineStyle(\"orange\"),\n                label: \"Nguồn\",\n                data: random(),\n            });\n            this.chart.data.datasets.push({\n                ...lineStyle(\"cyan\"),\n                label: \"Được giới thiệu\",\n                data: random(),\n            });\n            this.chart.data.datasets.push({\n                ...lineStyle(\"yellow\"),\n                label: \"Đã tuyển\",\n                data: random(),\n            });\n\n            this.chart.loaded = true;\n        }\n    },\n\n    mounted(): void {\n        // for test UI\n        this.fillTestData();\n    }\n})\n"],"sourceRoot":""}]}