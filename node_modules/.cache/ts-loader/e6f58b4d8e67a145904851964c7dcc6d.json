{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue","mtime":1557830879582},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport { fauth } from '@/firebase';\nimport firebase from '@/firebase';\nimport { mapGetters } from 'vuex';\nexport default Vue.extend({\n  name: \"UserPassword\",\n  data: function data() {\n    return {\n      old_password: '',\n      password: '',\n      confirm_password: '',\n      saveflag: false,\n      error: false,\n      email: '',\n      errorMessage: ''\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser', 'currentCompany'])),\n  watch: {\n    currentUser: function currentUser(user) {\n      var self = this;\n      self.email = self.currentUser.email;\n    }\n  },\n  mounted: function mounted() {\n    var self = this;\n\n    if (self.currentUser) {\n      self.email = self.currentUser.email;\n    }\n  },\n  methods: {\n    validate: function validate() {\n      var self = this;\n      var flag = true;\n      self.errorMessage = \"\";\n\n      if (self.password == \"\") {\n        flag = false;\n        self.errorMessage = self.messages.SR_001_PASS_NULL;\n      } else if (self.password.length < 6) {\n        flag = false;\n        self.errorMessage = self.messages.SR_001_PASS_MIN;\n      } else if (self.password != self.confirm_password) {\n        flag = false;\n        self.errorMessage = self.messages.SR_001_PASS_MISMATCHED;\n      }\n\n      return flag;\n    },\n    SavePassword: function SavePassword() {\n      var self = this;\n      var user = fauth.currentUser;\n      self.password = self.password.trim();\n      self.confirm_password = self.confirm_password.trim(); //xac thuc credentials\n\n      var credential = firebase.auth.EmailAuthProvider.credential(user.email, self.old_password);\n      console.log(credential);\n      self.error = false;\n\n      if (user) {\n        if (user.email) {\n          self.error = false;\n          console.log(self.email); // lay xac thuc xong moi update lai password\n\n          user.reauthenticateAndRetrieveDataWithCredential(credential).then(function () {\n            if (self.validate()) {\n              user.updatePassword(self.password).then(function () {\n                self.saveflag = true;\n                self.old_password = \"\";\n                self.password = \"\";\n                self.confirm_password = \"\";\n                self.$toasted.show(self.messages.COMMON_SAVED);\n                setTimeout(function () {\n                  self.saveflag = false;\n                }, 1000);\n              }).catch(function (error) {\n                console.log(error);\n                self.error = true;\n                if (error.code == \"auth/weak-password\") self.errorMessage = self.messages.SR_001_PASS_MIN;else self.errorMessage = self.messages.SR_001_PASS_SAVE_FAIL;\n              });\n            } else {\n              self.error = true;\n            }\n          }).catch(function (error) {\n            console.log(error);\n            if (error.code == \"auth/wrong-password\") self.errorMessage = self.messages.SR_001_WRONG_PASS;else self.errorMessage = error;\n            self.error = true;\n          });\n        } else {\n          self.errorMessage = \"User không tồn tại\";\n          self.error = true;\n        }\n      } else {\n        self.errorMessage = \"User không tồn tại\";\n        self.error = true;\n      }\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport User from \"@/models/User\";\nimport {fauth} from '@/firebase';\nimport firebase from '@/firebase';\nimport {mapGetters} from 'vuex';\n\n\nexport default Vue.extend({\n\n    name: \"UserPassword\",\n    data() {\n        return {\n            old_password: '',\n            password: '',\n            confirm_password: '',\n            saveflag: false,\n            error: false,\n            email: '',\n            errorMessage: '',\n\n        }\n    },\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentUser',\n            'currentCompany',\n            // ...\n        ]),\n    },\n    watch: {\n        currentUser: function (user) {\n            const self = this;\n            self.email = self.currentUser.email;\n        }\n    },\n    mounted: function () {\n\n        const self = this;\n\n\n        if (self.currentUser) {\n            self.email = self.currentUser.email;\n        }\n\n\n    },\n    methods: {\n        validate: function () {\n            const self = this;\n            let flag = true;\n            self.errorMessage = \"\";\n\n\n            if (self.password == \"\") {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_NULL;\n            } else if (self.password.length < 6) {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_MIN;\n            } else if (self.password != self.confirm_password) {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_MISMATCHED;\n\n            }\n\n\n            return flag;\n        },\n        SavePassword: function () {\n            const self = this;\n\n            var user = fauth.currentUser;\n\n            self.password = self.password.trim();\n            self.confirm_password = self.confirm_password.trim();\n\n            //xac thuc credentials\n            var credential = firebase.auth.EmailAuthProvider.credential(\n                user.email,\n                self.old_password\n            );\n\n            console.log(credential);\n\n            self.error = false;\n\n            if (user) {\n\n                if (user.email) {\n\n                    self.error = false;\n                    console.log(self.email);\n\n                    // lay xac thuc xong moi update lai password\n\n                    user.reauthenticateAndRetrieveDataWithCredential(credential).then(function () {\n\n                        if (self.validate()) {\n                            user.updatePassword(self.password).then(function () {\n                                self.saveflag = true;\n\n                                self.old_password = \"\";\n                                self.password = \"\";\n                                self.confirm_password = \"\";\n\n                                self.$toasted.show(self.messages.COMMON_SAVED);\n\n                                setTimeout(function () {\n                                    self.saveflag = false;\n                                }, 1000);\n                            }).catch(function (error) {\n                                console.log(error);\n                                self.error = true;\n                                if (error.code == \"auth/weak-password\")\n                                    self.errorMessage = self.messages.SR_001_PASS_MIN;\n                                else\n                                    self.errorMessage = self.messages.SR_001_PASS_SAVE_FAIL;\n                            });\n                        } else {\n                            self.error = true;\n                        }\n                    }).catch(function (error) {\n                        console.log(error);\n                        if (error.code == \"auth/wrong-password\")\n                            self.errorMessage = self.messages.SR_001_WRONG_PASS;\n                        else\n                            self.errorMessage = error;\n                        self.error = true;\n                    });\n                } else {\n                    self.errorMessage = \"User không tồn tại\";\n                    self.error = true;\n                }\n            } else {\n                self.errorMessage = \"User không tồn tại\";\n                self.error = true;\n            }\n\n\n        }\n    }\n\n});\n"],"sourceRoot":""}]}