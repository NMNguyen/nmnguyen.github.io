{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/tasks/TaskPage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/tasks/TaskPage.vue","mtime":1557830879585},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from 'vue';\nimport { Datetime } from 'vue-datetime';\nimport Moment from 'moment';\nimport Task from '@/models/Task';\nimport { mapGetters, mapMutations } from 'vuex';\nimport { VclCode, VclFacebook } from 'vue-content-loading';\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\nexport default Vue.extend({\n  name: 'home',\n  components: {\n    datetime: Datetime,\n    VclCode: VclCode,\n    VclFacebook: VclFacebook,\n    ModalWrapper: ModalWrapper\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser', 'currentCompany', 'getTask' // ...\n  ])),\n  // watch: {\n  //     getTask(val, oldVal) {\n  //         // console.log(val);\n  //         this.getAllTask();\n  //     }\n  // },\n  data: function data() {\n    return {\n      loading: true,\n      taskGroupOrder: ['overdue', 'today', 'upcoming', 'complete'],\n      tasks: {\n        overdue: [],\n        today: [],\n        upcoming: [],\n        complete: []\n      },\n      currentTask: new Task()\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    console.log('get task before');\n    this.getAllTask();\n    this.$store.subscribe(function (mutation, state) {\n      if (mutation.type == \"clearCurrentTask\") {\n        _this.getAllTask();\n      }\n    });\n  },\n  methods: _objectSpread({}, mapMutations(['updateCurrentTask', 'modals/showAddTask']), {\n    showCurrentTask: function showCurrentTask(task) {\n      this.currentTask = task;\n    },\n    deleteTask: function deleteTask(task) {\n      var self = this; // Trigger a confirmation dialog\n\n      this.$dialog.confirm('Bạn có chắc chắn?', {\n        okText: \"Xóa ngay\",\n        cancelText: \"Thoát\"\n      }).then(function (dialog) {\n        task.delete().then(function (data) {\n          self.getAllTask();\n        });\n      }).catch(function () {\n        console.log('Clicked on cancel');\n      });\n    },\n    getAllTask: function () {\n      var _getAllTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var group, tasks;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                for (group in this.tasks) {\n                  this.tasks[group] = [];\n                }\n\n                _context.next = 3;\n                return Task.instance.getAllTasks();\n\n              case 3:\n                tasks = _context.sent;\n                tasks.forEach(function (task) {\n                  var due = Moment(task.deadline);\n                  var today = Moment(Date.now());\n\n                  if (task.is_done) {\n                    _this2.tasks.complete.push(task);\n                  } else if (due.isBefore(today)) {\n                    _this2.tasks.overdue.push(task);\n                  } else if (due.isAfter(today)) {\n                    _this2.tasks.upcoming.push(task);\n                  } else {\n                    _this2.tasks.today.push(task);\n                  }\n                });\n\n                if (tasks.length > 0) {\n                  this.currentTask = tasks[0];\n                }\n\n                this.loading = false;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAllTask() {\n        return _getAllTask.apply(this, arguments);\n      }\n\n      return getAllTask;\n    }(),\n    showAddTask: function showAddTask() {\n      this['modals/showAddTask'](true);\n    }\n  })\n});",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/tasks/TaskPage.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport {Datetime} from 'vue-datetime';\nimport Moment from 'moment';\nimport Task from '@/models/Task';\nimport {mapGetters, mapMutations} from 'vuex';\nimport {VclCode, VclFacebook} from 'vue-content-loading';\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\n\n\nexport default Vue.extend({\n    name: 'home',\n    components: {\n        datetime: Datetime,\n        VclCode,\n        VclFacebook,\n        ModalWrapper,\n    },\n\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentUser',\n            'currentCompany',\n            'getTask'\n            // ...\n        ]),\n\n    },\n    // watch: {\n    //     getTask(val, oldVal) {\n    //         // console.log(val);\n    //         this.getAllTask();\n    //     }\n    // },\n    data() {\n        return {\n            loading: true,\n            taskGroupOrder: ['overdue', 'today', 'upcoming', 'complete'],\n            tasks: {\n                overdue: [] as Task[],\n                today: [] as Task[],\n                upcoming: [] as Task[],\n                complete: [] as Task[],\n            },\n            currentTask: new Task() as Task,\n        }\n    },\n    created() {\n        console.log('get task before');\n        this.getAllTask();\n\n        this.$store.subscribe((mutation, state) => {\n            if (mutation.type == \"clearCurrentTask\") {\n                this.getAllTask();\n            }\n        })\n\n    },\n\n    methods: {\n        ...mapMutations(['updateCurrentTask', 'modals/showAddTask']\n        ),\n        showCurrentTask(task: Task) {\n            this.currentTask = task;\n        },\n        deleteTask(task) {\n\n            let self = this;\n\n            // Trigger a confirmation dialog\n            this.$dialog\n                .confirm('Bạn có chắc chắn?', {okText: \"Xóa ngay\", cancelText: \"Thoát\"})\n                .then(function (dialog) {\n                    task.delete().then(data => {\n                        self.getAllTask();\n\n                    })\n                })\n                .catch(function () {\n                    console.log('Clicked on cancel');\n                });\n        },\n        async getAllTask() {\n            for (const group in this.tasks) {\n                this.tasks[group] = [];\n            }\n            const tasks = await Task.instance.getAllTasks();\n            tasks.forEach(task=>{\n                const due = Moment(task.deadline);\n                const today = Moment(Date.now());\n\n                if (task.is_done) {\n                    this.tasks.complete.push(task);\n                } else if (due.isBefore(today)) {\n                    this.tasks.overdue.push(task);\n                } else if (due.isAfter(today)) {\n                    this.tasks.upcoming.push(task);\n                } else {\n                    this.tasks.today.push(task);\n                }\n            });\n            if (tasks.length > 0) {\n                this.currentTask = tasks[0];\n            }\n            this.loading = false;\n        },\n        showAddTask(): void {\n            this['modals/showAddTask'](true);\n        },\n    }\n});\n"],"sourceRoot":""}]}