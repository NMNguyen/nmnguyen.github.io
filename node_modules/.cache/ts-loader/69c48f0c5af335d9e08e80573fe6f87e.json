{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/views/Home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/views/Home.vue","mtime":1557835810068},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport PositionItem from \"@/components/Position/PositionItem.vue\"; // import CandidateModal from '@/components/modals/CandidateModal.vue';\n// import User from \"../models/User\";\n// import {fauth} from \"@/firebase\";\n\nimport { mapGetters } from \"vuex\";\nimport Task from \"@/models/Task\";\nimport Position from \"@/models/Position\";\nimport Candidate from \"@/models/Candidate\";\nimport { VclCode, VclFacebook } from \"vue-content-loading\";\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\nimport TaskListItem from \"@/components/tasks/TaskListItem.vue\";\nexport default Vue.extend({\n  name: \"home\",\n  components: {\n    PositionItem: PositionItem,\n    VclFacebook: VclFacebook,\n    VclCode: VclCode,\n    ModalWrapper: ModalWrapper,\n    TaskListItem: TaskListItem\n  },\n  data: function data() {\n    return {\n      tasks: [],\n      positions: [],\n      candidates: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"currentUser\", \"currentCompany\" // ...\n  ])),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.fetchData();\n    this.$store.subscribe(function (mutation, state) {\n      switch (mutation.type) {\n        case \"setCompany\":\n          _this.fetchData();\n\n      }\n    });\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var self = this;\n      new Task().getAllTasks().then(function (tasks) {\n        self.tasks = tasks;\n      });\n      new Position().getAllPositions().then(function (positions) {\n        self.positions = positions;\n      });\n      new Candidate().getAllCandidates().then(function (candidates) {\n        self.candidates = candidates;\n      });\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/views/Home.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";AA0NA,OAAO,GAAP,MAAgB,KAAhB;AACA,OAAO,YAAP,MAAyB,wCAAzB,C,CACA;AACA;AACA;;AACA,SAAQ,UAAR,QAAyB,MAAzB;AACA,OAAO,IAAP,MAAiB,eAAjB;AACA,OAAO,QAAP,MAAqB,mBAArB;AACA,OAAO,SAAP,MAAsB,oBAAtB;AACA,SAAQ,OAAR,EAAiB,WAAjB,QAAmC,qBAAnC;AACA,OAAO,YAAP,MAAyB,+BAAzB;AACA,OAAO,YAAP,MAAyB,qCAAzB;AAEA,eAAe,GAAG,CAAC,MAAJ,CAAW;AACtB,EAAA,IAAI,EAAE,MADgB;AAEtB,EAAA,UAAU,EAAE;AACR,IAAA,YAAY,EAAZ,YADQ;AAER,IAAA,WAAW,EAAX,WAFQ;AAGR,IAAA,OAAO,EAAP,OAHQ;AAIR,IAAA,YAAY,EAAZ,YAJQ;AAKR,IAAA,YAAY,EAAZ;AALQ,GAFU;AAStB,EAAA,IATsB,kBASlB;AACA,WAAO;AACH,MAAA,KAAK,EAAE,EADJ;AAEH,MAAA,SAAS,EAAE,EAFR;AAGH,MAAA,UAAU,EAAE;AAHT,KAAP;AAKH,GAfqB;AAgBtB,EAAA,QAAQ,oBAED,UAAU,CAAC,CACV,aADU,EAEV,gBAFU,CAGV;AAHU,GAAD,CAFT,CAhBc;AAwBtB,EAAA,OAxBsB,qBAwBf;AAAA;;AACH,SAAK,SAAL;AAEA,SAAK,MAAL,CAAY,SAAZ,CAAsB,UAAC,QAAD,EAAW,KAAX,EAAoB;AACtC,cAAQ,QAAQ,CAAC,IAAjB;AACI,aAAK,YAAL;AACI,UAAA,KAAI,CAAC,SAAL;;AAFR;AAIH,KALD;AAMH,GAjCqB;AAmCtB,EAAA,OAAO,EAAE;AACL,IAAA,SAAS,EAAE,qBAAA;AACP,UAAI,IAAI,GAAG,IAAX;AAEA,UAAI,IAAJ,GAAW,WAAX,GAAyB,IAAzB,CAA8B,UAAA,KAAK,EAAG;AAClC,QAAA,IAAI,CAAC,KAAL,GAAa,KAAb;AACH,OAFD;AAIA,UAAI,QAAJ,GAAe,eAAf,GAAiC,IAAjC,CAAsC,UAAA,SAAS,EAAG;AAC9C,QAAA,IAAI,CAAC,SAAL,GAAiB,SAAjB;AACH,OAFD;AAIA,UAAI,SAAJ,GAAgB,gBAAhB,GAAmC,IAAnC,CAAwC,UAAA,UAAU,EAAG;AACjD,QAAA,IAAI,CAAC,UAAL,GAAkB,UAAlB;AACH,OAFD;AAGH;AAfI;AAnCa,CAAX,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport PositionItem from \"@/components/Position/PositionItem.vue\";\n// import CandidateModal from '@/components/modals/CandidateModal.vue';\n// import User from \"../models/User\";\n// import {fauth} from \"@/firebase\";\nimport {mapGetters} from \"vuex\";\nimport Task from \"@/models/Task\";\nimport Position from \"@/models/Position\";\nimport Candidate from \"@/models/Candidate\";\nimport {VclCode, VclFacebook} from \"vue-content-loading\";\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\nimport TaskListItem from \"@/components/tasks/TaskListItem.vue\";\n\nexport default Vue.extend({\n    name: \"home\",\n    components: {\n        PositionItem,\n        VclFacebook,\n        VclCode,\n        ModalWrapper,\n        TaskListItem,\n    },\n    data() {\n        return {\n            tasks: [] as Task[],\n            positions: [] as Position[],\n            candidates: [] as Candidate[]\n        };\n    },\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            \"currentUser\",\n            \"currentCompany\"\n            // ...\n        ])\n    },\n    mounted() {\n        this.fetchData();\n\n        this.$store.subscribe((mutation, state) => {\n            switch (mutation.type) {\n                case \"setCompany\":\n                    this.fetchData();\n            }\n        });\n    },\n\n    methods: {\n        fetchData: function () {\n            let self = this;\n\n            new Task().getAllTasks().then(tasks => {\n                self.tasks = tasks;\n            });\n\n            new Position().getAllPositions().then(positions => {\n                self.positions = positions;\n            });\n\n            new Candidate().getAllCandidates().then(candidates => {\n                self.candidates = candidates;\n            });\n        }\n    }\n});\n"],"sourceRoot":""}]}