{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js!/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserProfile.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/UserProfile.vue","mtime":1557830879582},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport { fstorage } from '@/firebase';\nimport { mapGetters } from 'vuex';\nexport default Vue.extend({\n  name: \"UserProfile\",\n  data: function data() {\n    return {\n      email: \"\",\n      username: \"\",\n      name: \"\",\n      saveflag: false,\n      whichFile: \"\",\n      upload: {},\n      photoURL: \"\",\n      filename: \"\",\n      fileupload: {},\n      flag_upload: false,\n      errorMessage: \"\",\n      error: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser', 'currentCompany'])),\n  watch: {\n    currentUser: function currentUser(user) {\n      var self = this;\n      self.name = user.name;\n      self.photoURL = user.photoURL;\n    }\n  },\n  mounted: function mounted() {\n    var self = this;\n\n    if (self.currentUser) {\n      self.name = self.currentUser.name;\n      if (self.currentUser.photoURL) self.photoURL = self.currentUser.photoURL;\n    }\n  },\n  methods: {\n    validate: function validate() {\n      var self = this;\n      var flag = true;\n      self.error = false;\n      self.errorMessage = \"\";\n      self.name = self.name.trim();\n\n      if (self.name == \"\") {\n        self.errorMessage = \"Tên người dùng không được để trống !\";\n        flag = false;\n        self.error = true;\n      }\n\n      return flag;\n    },\n    SaveUser: function SaveUser() {\n      var _this = this;\n\n      var self = this;\n\n      if (self.currentUser && self.validate()) {\n        self.currentUser.name = self.name;\n\n        if (self.flag_upload) {\n          self.$toasted.show(self.messages.SR_001_UPLOADING);\n          var filenameup = self.currentUser.email + '-' + self.stringGen(10) + self.currentUser.id + '-' + self.filename;\n          self.upload = fstorage.ref('image/avatar/' + self.currentUser.id + '/' + filenameup).put(self.fileupload);\n          self.upload.on('state_changed', function (sp) {\n            if (sp.bytesTransferred == sp.totalBytes) {\n              _this.$toasted.show(self.messages.SR_001_UPLOADED);\n            }\n          }, null, function () {\n            self.upload.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n              var oldavatar = self.currentUser.photoName;\n              self.currentUser.photoURL = downloadURL;\n              self.currentUser.photoName = filenameup;\n              console.log(downloadURL);\n              self.currentUser.update();\n\n              if (oldavatar && oldavatar != '') {\n                var desertRef = fstorage.ref().child('image/avatar/' + self.currentUser.id + '/' + oldavatar);\n                desertRef.delete().then(function () {// File deleted successfully\n                }).catch(function (error) {\n                  console.log(error);\n                });\n              }\n            });\n          });\n        }\n\n        self.currentUser.update();\n        self.saveflag = true;\n        setTimeout(function () {\n          self.saveflag = false;\n        }, 2000);\n      }\n    },\n    createImage: function createImage(file) {\n      var reader = new FileReader();\n      var self = this;\n      self.filename = file.name;\n\n      reader.onload = function (e) {\n        self.photoURL = reader.result;\n      };\n\n      reader.readAsDataURL(file);\n    },\n    detectFiles: function detectFiles(fileList, whichFile) {\n      var self = this;\n      self.flag_upload = false;\n      self.whichFile = whichFile;\n      console.log(fileList);\n\n      if (fileList.length == 1) {\n        if (fileList[0].type.indexOf(\"image\") == -1) {\n          this.$toasted.error('Chỉ được up file ảnh !');\n        } else {\n          self.createImage(fileList[0]);\n          self.fileupload = fileList[0];\n          self.flag_upload = true;\n        }\n      }\n    },\n    stringGen: function stringGen(len) {\n      var text = \" \";\n      var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\n      for (var i = 0; i < len; i++) {\n        text += charset.charAt(Math.floor(Math.random() * charset.length));\n      }\n\n      return text;\n    }\n  }\n});",null]}