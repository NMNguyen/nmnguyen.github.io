{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js!/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/Candidate/CandidatePage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/Candidate/CandidatePage.vue","mtime":1557830879565},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/inherits\";\nimport * as tslib_1 from \"tslib\";\nimport Vue from \"vue\";\nimport CandidateTypeDropdown from \"@/components/Candidate/CandidateTypeDropdown.vue\";\nimport CandidateColumnFilterDropdown from \"@/components/Candidate/CandidateColumnFilterDropdown.vue\";\nimport FilterColumn from \"@/components/FilterColumn/FilterColumn.vue\";\nimport CandidateColumnFilter from \"@/components/Candidate/CandidateColumnFilter\";\nimport Candidate from \"@/models/Candidate\";\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\nimport { mapMutations } from 'vuex';\nimport { Component, Prop } from \"vue-property-decorator\";\n\nvar CandidatePage =\n/*#__PURE__*/\nfunction (_Vue) {\n  _inherits(CandidatePage, _Vue);\n\n  function CandidatePage() {\n    var _this;\n\n    _classCallCheck(this, CandidatePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CandidatePage).apply(this, arguments));\n    _this.loaded = {\n      candidate: false\n    };\n    _this.filterNav = {\n      open: true\n    };\n    _this.candidates = [];\n    _this.candidateType = \"\";\n    _this.column_filters = _objectSpread({}, CandidateColumnFilter);\n    _this.row_check = [];\n    return _this;\n  }\n\n  _createClass(CandidatePage, [{\n    key: \"addCandidate\",\n    value: function addCandidate() {\n      this['modals/showAddCandidate'](true);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(ev) {\n      ev.preventDefault();\n    }\n  }, {\n    key: \"checkAll\",\n    value: function checkAll(checked) {\n      if (checked) this.row_check = this.candidates.map(function (c) {\n        return c.id;\n      });else this.row_check = [];\n    }\n  }, {\n    key: \"loadCandidates\",\n    value: function () {\n      var _loadCandidates = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var loadedCandidates, _loadedCandidates;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.candidates = [];\n\n                if (!this.position_id) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 4;\n                return Candidate.instance.getAllCandidates();\n\n              case 4:\n                loadedCandidates = _context.sent;\n                this.candidates = this.candidates.concat(loadedCandidates);\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.next = 10;\n                return Candidate.instance.getAllCandidates();\n\n              case 10:\n                _loadedCandidates = _context.sent;\n                this.candidates = this.candidates.concat(_loadedCandidates);\n\n              case 12:\n                this.loaded.candidate = true;\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadCandidates() {\n        return _loadCandidates.apply(this, arguments);\n      }\n\n      return loadCandidates;\n    }()\n  }, {\n    key: \"photoLink\",\n    value: function photoLink(candidate) {\n      console.log(candidate);\n      return candidate.photo || \"https://ui-avatars.com/api/?name=\" + candidate.name + '&size=64&background=c00&color=fff';\n    }\n  }, {\n    key: \"tableItemClicked\",\n    value: function tableItemClicked(item) {\n      console.log(item);\n      this.$router.push(\"/candidate/\".concat(item.id));\n    } // COMPUTED\n\n  }, {\n    key: \"mounted\",\n    // HOOK\n    value: function mounted() {\n      this.loadCandidates().catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"tableItems\",\n    get: function get() {\n      return _toConsumableArray(this.candidates);\n    }\n  }, {\n    key: \"tableFields\",\n    get: function get() {\n      var _this2 = this;\n\n      return Object.keys(this.column_filters).reduce(function (fields, filter) {\n        if (_this2.column_filters[filter].check) {\n          return [].concat(_toConsumableArray(fields), [{\n            key: filter,\n            label: _this2.column_filters[filter].text,\n            sortable: true\n          }]);\n        } else {\n          return fields;\n        }\n      }, [\"selected\"]);\n    }\n  }]);\n\n  return CandidatePage;\n}(Vue);\n\ntslib_1.__decorate([Prop({\n  default: null\n})], CandidatePage.prototype, \"position_id\", void 0);\n\nCandidatePage = tslib_1.__decorate([Component({\n  components: {\n    CandidateTypeDropdown: CandidateTypeDropdown,\n    CandidateColumnFilterDropdown: CandidateColumnFilterDropdown,\n    FilterColumn: FilterColumn,\n    ModalWrapper: ModalWrapper\n  },\n  methods: _objectSpread({}, mapMutations(['modals/showAddCandidate']))\n})], CandidatePage);\nexport default CandidatePage; // export default Vue.extend({\n//     name: \"CandidatesPage\",\n//     components: {\n//         CandidateTypeDropdown,\n//         CandidateColumnFilterDropdown,\n//         FilterColumn,\n//         ModalWrapper,\n//     },\n//     props: {\n//         position_id: {\n//             type: String | null, // if null, load all\n//             defaultValue: null,\n//         }\n//     },\n//     data() {\n//         return {\n//             loaded: {\n//                 candidate: false,\n//             },\n//             filterNav: {\n//                 open: true,\n//             },\n//             candidates: [] as Candidate[],\n//             candidateType: \"\",\n//             column_filters: {...CandidateColumnFilter},\n//             row_check: [] as string[],\n//         };\n//     },\n//     methods: {\n//         ...mapMutations(['modals/showAddCandidate']),\n//\n//         addCandidate(): void {\n//             this['modals/showAddCandidate'](true);\n//         },\n//\n//         reset(ev: Event): void {\n//             ev.preventDefault();\n//         },\n//\n//         checkAll(checked: boolean): void {\n//             if (checked)\n//                 this.row_check = this.candidates.map(c => c.id);\n//             else\n//                 this.row_check = [];\n//         },\n//\n//         async loadCandidates(): Promise<void> {\n//             this.candidates = [];\n//             if (this.position_id) {\n//                 // load by position here\n//                 // replace code under\n//                 const loadedCandidates = await Candidate.instance.getAllCandidates();\n//                 this.candidates = this.candidates.concat(loadedCandidates);\n//             } else {\n//                 const loadedCandidates = await Candidate.instance.getAllCandidates();\n//                 this.candidates = this.candidates.concat(loadedCandidates);\n//             }\n//             this.loaded.candidate = true;\n//         }\n//     },\n//     computed: {\n//         tableItems(): any[] {\n//             return [...this.candidates];\n//         },\n//         tableFields(): any[] {\n//             return Object.keys(this.column_filters).reduce(\n//                 (fields: any[], filter: any) => {\n//                     if (this.column_filters[filter].check) {\n//                         return [\n//                             ...fields,\n//                             {\n//                                 key: filter,\n//                                 label: this.column_filters[filter].text,\n//                                 sortable: true\n//                             }\n//                         ];\n//                     } else {\n//                         return fields;\n//                     }\n//                 },\n//                 [\"selected\"]\n//             );\n//         }\n//     },\n//     mounted() {\n//         this.loadCandidates().catch(err => {\n//             console.log(err);\n//         });\n//     },\n// });",null]}