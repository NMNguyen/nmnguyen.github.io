{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/src/store/modals/store.ts","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/store/modals/store.ts","mtime":1557114387694},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832}],"contextDependencies":[],"result":["var store = {\n  namespaced: true,\n  state: {\n    addTask: false,\n    addCandidate: false\n  },\n  mutations: {\n    showAddTask: function showAddTask(state) {\n      var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      state.addTask = val;\n    },\n    showAddCandidate: function showAddCandidate(state) {\n      var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      state.addCandidate = val;\n    }\n  },\n  getters: {\n    addTask: function addTask(state) {\n      return state.addTask;\n    },\n    addCandidate: function addCandidate(state) {\n      return state.addCandidate;\n    }\n  }\n};\nexport default store;",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/src/store/modals/store.ts"],"names":[],"mappings":"AAQA,IAAM,KAAK,GAA4B;AACnC,EAAA,UAAU,EAAE,IADuB;AAEnC,EAAA,KAAK,EAAE;AACH,IAAA,OAAO,EAAE,KADN;AAEH,IAAA,YAAY,EAAE;AAFX,GAF4B;AAMnC,EAAA,SAAS,EAAE;AACP,IAAA,WADO,uBACK,KADL,EACsB;AAAA,UAAV,GAAU,uEAAJ,IAAI;AACzB,MAAA,KAAK,CAAC,OAAN,GAAgB,GAAhB;AACH,KAHM;AAIP,IAAA,gBAJO,4BAIU,KAJV,EAI2B;AAAA,UAAV,GAAU,uEAAJ,IAAI;AAC9B,MAAA,KAAK,CAAC,YAAN,GAAqB,GAArB;AACH;AANM,GANwB;AAcnC,EAAA,OAAO,EAAE;AACL,IAAA,OADK,mBACG,KADH,EACQ;AACT,aAAO,KAAK,CAAC,OAAb;AACH,KAHI;AAIL,IAAA,YAJK,wBAIQ,KAJR,EAIa;AACd,aAAO,KAAK,CAAC,YAAb;AACH;AANI;AAd0B,CAAvC;AAwBA,eAAe,KAAf","sourcesContent":["import {Action, MutationTree, StoreOptions, Module} from \"vuex\";\nimport Vuex from 'vuex';\n\nexport interface ModalState {\n    addTask: boolean;\n    addCandidate: boolean;\n}\n\nconst store: Module<ModalState, any> = {\n    namespaced: true,\n    state: {\n        addTask: false,\n        addCandidate: false,\n    },\n    mutations: {\n        showAddTask(state, val = true) {\n            state.addTask = val;\n        },\n        showAddCandidate(state, val = true) {\n            state.addCandidate = val;\n        },\n    },\n    getters: {\n        addTask(state): boolean {\n            return state.addTask;\n        },\n        addCandidate(state): boolean {\n            return state.addCandidate;\n        },\n    }\n};\n\nexport default store;\n"],"sourceRoot":""}]}