{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js!/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/views/Home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/views/Home.vue","mtime":1557830879596},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport PositionItem from \"@/components/Position/PositionItem.vue\"; // import CandidateModal from '@/components/modals/CandidateModal.vue';\n// import User from \"../models/User\";\n// import {fauth} from \"@/firebase\";\n\nimport { mapGetters } from \"vuex\";\nimport Task from \"@/models/Task\";\nimport Position from \"@/models/Position\";\nimport Candidate from \"@/models/Candidate\";\nimport { VclCode, VclFacebook } from \"vue-content-loading\";\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\nimport TaskListItem from \"@/components/tasks/TaskListItem.vue\";\nexport default Vue.extend({\n  name: \"home\",\n  components: {\n    PositionItem: PositionItem,\n    VclFacebook: VclFacebook,\n    VclCode: VclCode,\n    ModalWrapper: ModalWrapper,\n    TaskListItem: TaskListItem\n  },\n  data: function data() {\n    return {\n      tasks: [],\n      positions: [],\n      candidates: []\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"currentUser\", \"currentCompany\" // ...\n  ])),\n  mounted: function mounted() {\n    var _this = this;\n\n    this.fetchData();\n    this.$store.subscribe(function (mutation, state) {\n      switch (mutation.type) {\n        case \"setCompany\":\n          _this.fetchData();\n\n      }\n    });\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var self = this;\n      new Task().getAllTasks().then(function (tasks) {\n        self.tasks = tasks;\n      });\n      new Position().getAllPositions().then(function (positions) {\n        self.positions = positions;\n      });\n      new Candidate().getAllCandidates().then(function (candidates) {\n        self.candidates = candidates;\n      });\n    }\n  }\n});",null]}