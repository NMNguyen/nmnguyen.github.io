{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js!/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-3!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue","mtime":1557830879582},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport { fauth } from '@/firebase';\nimport firebase from '@/firebase';\nimport { mapGetters } from 'vuex';\nexport default Vue.extend({\n  name: \"UserPassword\",\n  data: function data() {\n    return {\n      old_password: '',\n      password: '',\n      confirm_password: '',\n      saveflag: false,\n      error: false,\n      email: '',\n      errorMessage: ''\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser', 'currentCompany'])),\n  watch: {\n    currentUser: function currentUser(user) {\n      var self = this;\n      self.email = self.currentUser.email;\n    }\n  },\n  mounted: function mounted() {\n    var self = this;\n\n    if (self.currentUser) {\n      self.email = self.currentUser.email;\n    }\n  },\n  methods: {\n    validate: function validate() {\n      var self = this;\n      var flag = true;\n      self.errorMessage = \"\";\n\n      if (self.password == \"\") {\n        flag = false;\n        self.errorMessage = self.messages.SR_001_PASS_NULL;\n      } else if (self.password.length < 6) {\n        flag = false;\n        self.errorMessage = self.messages.SR_001_PASS_MIN;\n      } else if (self.password != self.confirm_password) {\n        flag = false;\n        self.errorMessage = self.messages.SR_001_PASS_MISMATCHED;\n      }\n\n      return flag;\n    },\n    SavePassword: function SavePassword() {\n      var self = this;\n      var user = fauth.currentUser;\n      self.password = self.password.trim();\n      self.confirm_password = self.confirm_password.trim(); //xac thuc credentials\n\n      var credential = firebase.auth.EmailAuthProvider.credential(user.email, self.old_password);\n      console.log(credential);\n      self.error = false;\n\n      if (user) {\n        if (user.email) {\n          self.error = false;\n          console.log(self.email); // lay xac thuc xong moi update lai password\n\n          user.reauthenticateAndRetrieveDataWithCredential(credential).then(function () {\n            if (self.validate()) {\n              user.updatePassword(self.password).then(function () {\n                self.saveflag = true;\n                self.old_password = \"\";\n                self.password = \"\";\n                self.confirm_password = \"\";\n                self.$toasted.show(self.messages.COMMON_SAVED);\n                setTimeout(function () {\n                  self.saveflag = false;\n                }, 1000);\n              }).catch(function (error) {\n                console.log(error);\n                self.error = true;\n                if (error.code == \"auth/weak-password\") self.errorMessage = self.messages.SR_001_PASS_MIN;else self.errorMessage = self.messages.SR_001_PASS_SAVE_FAIL;\n              });\n            } else {\n              self.error = true;\n            }\n          }).catch(function (error) {\n            console.log(error);\n            if (error.code == \"auth/wrong-password\") self.errorMessage = self.messages.SR_001_WRONG_PASS;else self.errorMessage = error;\n            self.error = true;\n          });\n        } else {\n          self.errorMessage = \"User không tồn tại\";\n          self.error = true;\n        }\n      } else {\n        self.errorMessage = \"User không tồn tại\";\n        self.error = true;\n      }\n    }\n  }\n});",null]}