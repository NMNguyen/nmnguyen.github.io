{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/src/store/store.ts","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/store/store.ts","mtime":1557830879593},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.array.find-index\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport firebase from 'firebase/app';\nimport Company from \"@/models/Company\";\nimport User from \"@/models/User\";\nimport Router from \"../router\";\nimport Task from \"@/models/Task\";\nVue.use(Vuex);\nimport ModalModule from \"./modals/store\";\nimport PositionPipeline from \"./position_pipeline/store\";\nexport var store = new Vuex.Store({\n  modules: {\n    modals: ModalModule,\n    position_pipeline: PositionPipeline\n  },\n  state: {\n    user: null,\n    users: [],\n    company: null,\n    task: null\n  },\n  getters: {\n    currentUser: function currentUser(state) {\n      return state.user;\n    },\n    companyUsers: function companyUsers(state) {\n      return state.users;\n    },\n    getTask: function getTask(state) {\n      if (state.task == null) {\n        state.task = new Task();\n      }\n\n      return state.task;\n    },\n    currentCompany: function currentCompany(state) {\n      return state.company;\n    }\n  },\n  mutations: {\n    updateCurrentTask: function updateCurrentTask(state, task) {\n      state.task = task;\n      state.modals.addTask = true;\n    },\n    setUser: function setUser(state, user) {\n      state.user = user;\n    },\n    setCompanyUser: function setCompanyUser(state, data) {\n      var userIndex = state.users.findIndex(function (val) {\n        return val.id === data.id;\n      });\n      state.users[userIndex] = data;\n    },\n    setUsers: function setUsers(state, users) {\n      state.users = users;\n    },\n    setCompany: function setCompany(state, company) {\n      state.company = company;\n    },\n    clearCurrentTask: function clearCurrentTask(state) {\n      state.task = new Task();\n    }\n  },\n  actions: {\n    setUser: function () {\n      var _setUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(context) {\n        var fuser, user, company, users;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fuser = firebase.auth().currentUser;\n\n                if (!fuser) {\n                  _context.next = 16;\n                  break;\n                }\n\n                _context.next = 4;\n                return new User().getById(fuser.uid);\n\n              case 4:\n                user = _context.sent;\n                _context.next = 7;\n                return new Company().getById(user.company_id);\n\n              case 7:\n                company = _context.sent;\n                _context.next = 10;\n                return new User().getAllUsers(user.company_id);\n\n              case 10:\n                users = _context.sent;\n                context.commit(\"setUser\", user);\n                context.commit(\"setCompany\", company);\n                context.commit(\"setUsers\", users);\n                _context.next = 17;\n                break;\n\n              case 16:\n                Router.push('/login');\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function setUser(_x) {\n        return _setUser.apply(this, arguments);\n      }\n\n      return setUser;\n    }()\n  }\n});",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/src/store/store.ts"],"names":[],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport firebase from 'firebase/app';\nimport Company from \"@/models/Company\";\nimport User from \"@/models/User\";\nimport Router from '../router';\nimport Task from \"@/models/Task\";\nVue.use(Vuex);\n\nimport ModalModule from './modals/store';\nimport PositionPipeline from './position_pipeline/store';\n\nexport const store = new Vuex.Store<any>({ // any for test\n    modules: {\n        modals: ModalModule,\n        position_pipeline: PositionPipeline\n    },\n    state: {\n        user: null as User | null,\n        users: [] as User[] | [],\n        company: null as Company | null,\n        task: null as Task | null,\n\n    },\n    getters: {\n        currentUser: state => {\n            return state.user;\n        },\n        companyUsers: state => {\n            return state.users;\n        },\n        getTask: state => {\n            if (state.task == null){\n                state.task = new Task();\n            }\n            return state.task;\n        },\n        currentCompany: state => {\n            return state.company;\n        },\n    },\n    mutations: {\n        updateCurrentTask(state, task) {\n            state.task = task;\n            state.modals.addTask = true;\n        },\n        setUser(state, user) {\n            state.user = user;\n        },\n        setCompanyUser(state, data) {\n            const userIndex = state.users.findIndex(val=>val.id===data.id);\n            state.users[userIndex] = data;\n        },\n        setUsers(state, users) {\n            state.users = users;\n        },\n        setCompany(state, company) {\n            state.company = company;\n        },\n        clearCurrentTask(state){\n            state.task = new Task();\n        }\n    },\n    actions: {\n        setUser: async context => {\n            let fuser = firebase.auth().currentUser;\n\n            if (fuser) {\n                // debugger;\n                let user = await new User().getById(fuser.uid) as User;\n                let company = await new Company().getById(user.company_id) as Company;\n                let users = await new User().getAllUsers(user.company_id) as User[];\n\n                context.commit(\"setUser\", user);\n                context.commit(\"setCompany\", company);\n                context.commit(\"setUsers\", users);\n            } else {\n                Router.push('/login')\n            }\n\n        },\n    },\n});\n"],"sourceRoot":""}]}