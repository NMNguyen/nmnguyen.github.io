{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js!/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js??ref--13-2!/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserProfile.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/UserProfile.vue","mtime":1557830879582},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/Volumes/Data/app.cloudjet.work/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport Vue from \"vue\";\nimport { fstorage } from '@/firebase';\nimport { mapGetters } from 'vuex';\nexport default Vue.extend({\n  name: \"UserProfile\",\n  data: function data() {\n    return {\n      email: \"\",\n      username: \"\",\n      name: \"\",\n      saveflag: false,\n      whichFile: \"\",\n      upload: {},\n      photoURL: \"\",\n      filename: \"\",\n      fileupload: {},\n      flag_upload: false,\n      errorMessage: \"\",\n      error: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser', 'currentCompany'])),\n  watch: {\n    currentUser: function currentUser(user) {\n      var self = this;\n      self.name = user.name;\n      self.photoURL = user.photoURL;\n    }\n  },\n  mounted: function mounted() {\n    var self = this;\n\n    if (self.currentUser) {\n      self.name = self.currentUser.name;\n      if (self.currentUser.photoURL) self.photoURL = self.currentUser.photoURL;\n    }\n  },\n  methods: {\n    validate: function validate() {\n      var self = this;\n      var flag = true;\n      self.error = false;\n      self.errorMessage = \"\";\n      self.name = self.name.trim();\n\n      if (self.name == \"\") {\n        self.errorMessage = \"Tên người dùng không được để trống !\";\n        flag = false;\n        self.error = true;\n      }\n\n      return flag;\n    },\n    SaveUser: function SaveUser() {\n      var _this = this;\n\n      var self = this;\n\n      if (self.currentUser && self.validate()) {\n        self.currentUser.name = self.name;\n\n        if (self.flag_upload) {\n          self.$toasted.show(self.messages.SR_001_UPLOADING);\n          var filenameup = self.currentUser.email + '-' + self.stringGen(10) + self.currentUser.id + '-' + self.filename;\n          self.upload = fstorage.ref('image/avatar/' + self.currentUser.id + '/' + filenameup).put(self.fileupload);\n          self.upload.on('state_changed', function (sp) {\n            if (sp.bytesTransferred == sp.totalBytes) {\n              _this.$toasted.show(self.messages.SR_001_UPLOADED);\n            }\n          }, null, function () {\n            self.upload.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n              var oldavatar = self.currentUser.photoName;\n              self.currentUser.photoURL = downloadURL;\n              self.currentUser.photoName = filenameup;\n              console.log(downloadURL);\n              self.currentUser.update();\n\n              if (oldavatar && oldavatar != '') {\n                var desertRef = fstorage.ref().child('image/avatar/' + self.currentUser.id + '/' + oldavatar);\n                desertRef.delete().then(function () {// File deleted successfully\n                }).catch(function (error) {\n                  console.log(error);\n                });\n              }\n            });\n          });\n        }\n\n        self.currentUser.update();\n        self.saveflag = true;\n        setTimeout(function () {\n          self.saveflag = false;\n        }, 2000);\n      }\n    },\n    createImage: function createImage(file) {\n      var reader = new FileReader();\n      var self = this;\n      self.filename = file.name;\n\n      reader.onload = function (e) {\n        self.photoURL = reader.result;\n      };\n\n      reader.readAsDataURL(file);\n    },\n    detectFiles: function detectFiles(fileList, whichFile) {\n      var self = this;\n      self.flag_upload = false;\n      self.whichFile = whichFile;\n      console.log(fileList);\n\n      if (fileList.length == 1) {\n        if (fileList[0].type.indexOf(\"image\") == -1) {\n          this.$toasted.error('Chỉ được up file ảnh !');\n        } else {\n          self.createImage(fileList[0]);\n          self.fileupload = fileList[0];\n          self.flag_upload = true;\n        }\n      }\n    },\n    stringGen: function stringGen(len) {\n      var text = \" \";\n      var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\n      for (var i = 0; i < len; i++) {\n        text += charset.charAt(Math.floor(Math.random() * charset.length));\n      }\n\n      return text;\n    }\n  }\n});",{"version":3,"sources":["/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserProfile.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport User from \"@/models/User\";\nimport {fstorage} from '@/firebase';\nimport {mapGetters} from 'vuex';\n\n\nexport default Vue.extend({\n\n    name: \"UserProfile\",\n\n    data() {\n        return {\n            email: \"\",\n            username: \"\",\n            name: \"\",\n            saveflag: false,\n            whichFile: \"\",\n            upload: {} as firebase.storage.UploadTask,\n            photoURL: \"\",\n            filename: \"\",\n            fileupload: {},\n            flag_upload: false,\n            errorMessage: \"\",\n            error:false,\n\n\n        }\n    },\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentUser',\n            'currentCompany',\n            // ...\n        ]),\n    },\n    watch: {\n        currentUser: function (user) {\n            const self = this;\n            self.name = user.name;\n            self.photoURL = user.photoURL;\n        }\n    },\n    mounted: function () {\n\n        const self = this;\n\n        if (self.currentUser) {\n            self.name = self.currentUser.name;\n            if (self.currentUser.photoURL)\n                self.photoURL = self.currentUser.photoURL;\n        }\n\n\n    },\n    methods: {\n        validate: function () {\n            const self = this;\n            let flag = true;\n            self.error = false;\n            self.errorMessage = \"\";\n            self.name = self.name.trim();\n\n            if (self.name == \"\") {\n                self.errorMessage = \"Tên người dùng không được để trống !\";\n                flag = false;\n                self.error = true;\n            }\n\n            return flag;\n\n        },\n        SaveUser: function () {\n            const self = this;\n            if ((self.currentUser) && (self.validate())) {\n                self.currentUser.name = self.name;\n\n                if (self.flag_upload) {\n                    self.$toasted.show(self.messages.SR_001_UPLOADING);\n                    const filenameup = self.currentUser.email + '-' + self.stringGen(10) + self.currentUser.id + '-' + self.filename;\n                    self.upload = fstorage.ref('image/avatar/' + self.currentUser.id + '/' + filenameup).put(self.fileupload);\n                    self.upload.on('state_changed', sp => {\n                            if (sp.bytesTransferred == sp.totalBytes) {\n                                this.$toasted.show(self.messages.SR_001_UPLOADED);\n                            }\n                        },\n                        null,\n                        () => {\n                            self.upload.snapshot.ref.getDownloadURL().then(downloadURL => {\n                                const oldavatar = self.currentUser.photoName;\n\n                                self.currentUser.photoURL = downloadURL;\n                                self.currentUser.photoName = filenameup;\n\n                                console.log(downloadURL);\n                                self.currentUser.update();\n\n                                if ((oldavatar) && (oldavatar != '')) {\n                                    var desertRef = fstorage.ref().child('image/avatar/' + self.currentUser.id + '/' + oldavatar);\n                                    desertRef.delete().then(function () {\n                                        // File deleted successfully\n                                    }).catch(function (error) {\n                                        console.log(error);\n                                    });\n                                }\n\n\n                            })\n                        })\n\n                }\n\n\n                self.currentUser.update();\n                self.saveflag = true;\n\n                setTimeout(function () {\n                    self.saveflag = false;\n                }, 2000);\n            }\n\n        },\n        createImage(file) {\n            let reader = new FileReader();\n            let self = this;\n            self.filename = file.name;\n\n            reader.onload = (e: Event) => {\n                self.photoURL = reader.result as string;\n            };\n            reader.readAsDataURL(file);\n        },\n        detectFiles(fileList, whichFile) {\n            const self = this;\n            self.flag_upload = false;\n            self.whichFile = whichFile;\n            console.log(fileList);\n            if (fileList.length == 1) {\n                if (fileList[0].type.indexOf(\"image\") == -1) {\n                    this.$toasted.error('Chỉ được up file ảnh !');\n                } else {\n                    self.createImage(fileList[0]);\n                    self.fileupload = fileList[0];\n                    self.flag_upload = true;\n                }\n            }\n        },\n        stringGen(len) {\n            let text = \" \";\n\n            let charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\n            for (var i = 0; i < len; i++)\n                text += charset.charAt(Math.floor(Math.random() * charset.length));\n\n            return text;\n\n        },\n    }\n});\n\n"],"sourceRoot":""}]}