{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/Candidate/CandidatePage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/Candidate/CandidatePage.vue","mtime":1557835810059},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport CandidateTypeDropdown from \"@/components/Candidate/CandidateTypeDropdown.vue\";\nimport CandidateColumnFilterDropdown from \"@/components/Candidate/CandidateColumnFilterDropdown.vue\";\nimport FilterColumn from \"@/components/FilterColumn/FilterColumn.vue\";\nimport CandidateColumnFilter from \"@/components/Candidate/CandidateColumnFilter\";\nimport Candidate from \"@/models/Candidate\";\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\n\nimport {mapMutations} from 'vuex';\nimport {Component, Prop} from \"vue-property-decorator\";\n\n@Component({\n    components: {\n        CandidateTypeDropdown,\n        CandidateColumnFilterDropdown,\n        FilterColumn,\n        ModalWrapper,\n    },\n    methods: {\n        ...mapMutations(['modals/showAddCandidate']),\n    }\n})\nexport default class CandidatePage extends Vue {\n    @Prop({default: null}) position_id: string | null;\n\n    loaded = {\n        candidate: false,\n    };\n    filterNav = {\n        open: true,\n    };\n    candidates = [] as Candidate[];\n    candidateType = \"\";\n    column_filters = {...CandidateColumnFilter};\n    row_check = [] as string[];\n\n    addCandidate(): void {\n        this['modals/showAddCandidate'](true);\n    }\n\n    reset(ev: Event): void {\n        ev.preventDefault();\n    }\n\n    checkAll(checked: boolean): void {\n        if (checked)\n            this.row_check = this.candidates.map(c => c.id);\n        else\n            this.row_check = [];\n    }\n\n    async loadCandidates(): Promise<void> {\n        this.candidates = [];\n        if (this.position_id) {\n            // load by position here\n            // replace code under\n            const loadedCandidates = await Candidate.instance.getAllCandidates();\n            this.candidates = this.candidates.concat(loadedCandidates);\n        } else {\n            const loadedCandidates = await Candidate.instance.getAllCandidates();\n            this.candidates = this.candidates.concat(loadedCandidates);\n        }\n        this.loaded.candidate = true;\n    }\n\n    // COMPUTED\n    get tableItems(): any[] {\n        return [...this.candidates];\n    }\n    get tableFields(): any[] {\n        return Object.keys(this.column_filters)\n            .reduce((fields: any[], filter: any) => {\n                if (this.column_filters[filter].check) {\n                    return [\n                        ...fields,\n                        {\n                            key: filter,\n                            label: this.column_filters[filter].text,\n                            sortable: true\n                        }\n                    ];\n                } else {\n                    return fields;\n                }\n            },\n            [\"selected\"]\n        );\n    }\n\n    // HOOK\n\n    mounted() {\n        this.loadCandidates().catch(err => {\n            console.log(err);\n        });\n    }\n}\n\n// export default Vue.extend({\n//     name: \"CandidatesPage\",\n//     components: {\n//         CandidateTypeDropdown,\n//         CandidateColumnFilterDropdown,\n//         FilterColumn,\n//         ModalWrapper,\n//     },\n//     props: {\n//         position_id: {\n//             type: String | null, // if null, load all\n//             defaultValue: null,\n//         }\n//     },\n//     data() {\n//         return {\n//             loaded: {\n//                 candidate: false,\n//             },\n//             filterNav: {\n//                 open: true,\n//             },\n//             candidates: [] as Candidate[],\n//             candidateType: \"\",\n//             column_filters: {...CandidateColumnFilter},\n//             row_check: [] as string[],\n//         };\n//     },\n//     methods: {\n//         ...mapMutations(['modals/showAddCandidate']),\n//\n//         addCandidate(): void {\n//             this['modals/showAddCandidate'](true);\n//         },\n//\n//         reset(ev: Event): void {\n//             ev.preventDefault();\n//         },\n//\n//         checkAll(checked: boolean): void {\n//             if (checked)\n//                 this.row_check = this.candidates.map(c => c.id);\n//             else\n//                 this.row_check = [];\n//         },\n//\n//         async loadCandidates(): Promise<void> {\n//             this.candidates = [];\n//             if (this.position_id) {\n//                 // load by position here\n//                 // replace code under\n//                 const loadedCandidates = await Candidate.instance.getAllCandidates();\n//                 this.candidates = this.candidates.concat(loadedCandidates);\n//             } else {\n//                 const loadedCandidates = await Candidate.instance.getAllCandidates();\n//                 this.candidates = this.candidates.concat(loadedCandidates);\n//             }\n//             this.loaded.candidate = true;\n//         }\n//     },\n//     computed: {\n//         tableItems(): any[] {\n//             return [...this.candidates];\n//         },\n//         tableFields(): any[] {\n//             return Object.keys(this.column_filters).reduce(\n//                 (fields: any[], filter: any) => {\n//                     if (this.column_filters[filter].check) {\n//                         return [\n//                             ...fields,\n//                             {\n//                                 key: filter,\n//                                 label: this.column_filters[filter].text,\n//                                 sortable: true\n//                             }\n//                         ];\n//                     } else {\n//                         return fields;\n//                     }\n//                 },\n//                 [\"selected\"]\n//             );\n//         }\n//     },\n//     mounted() {\n//         this.loadCandidates().catch(err => {\n//             console.log(err);\n//         });\n//     },\n// });\n",{"version":3,"sources":["CandidatePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"CandidatePage.vue","sourceRoot":"src/components/Candidate","sourcesContent":["<template>\n    <div class=\"d-flex flex-column\" style=\"height: 100%\">\n        <header class=\"flex-shrink-0 p-3\">\n            <div class=\"d-flex justify-content-between\">\n                <!-- Left buttons -->\n                <div class=\"d-flex\">\n                    <!-- Filter -->\n                    <b-button\n                        @click=\"filterNav.open = !filterNav.open\"\n                        class=\"mx-3 text-secondary\"\n                        style=\"background: #E9ECEF; height: 30px;\"\n                    >\n                        <i class=\"fas fa-filter\"></i>\n                        <template v-if=\"filterNav.open\">\n                            <i class=\"fas fa-angle-left\"></i>\n                        </template>\n                        <template v-else>\n                            <i class=\"fas fa-angle-right\"></i>\n                        </template>\n                    </b-button>\n                    <!-- Position filter -->\n                    <CandidateTypeDropdown v-model=\"candidateType\"/>\n\n                    <!-- <div class=\"mr-3 positionFilterSelect d-flex justify-content-start align-items-center\">\n                                <div\n                                  id=\"positionFilter\"\n                                  class=\"d-flex justify-content-start align-items-center\"\n                                  style=\"z-index: 2; position: absolute;\"\n                                >\n                                  <i style=\"float:left\" class=\"fas fa-briefcase text-secondary\"></i>\n                                </div>\n                                <div\n                                  class=\"positionFilterSelect d-flex justify-content-start align-items-center\"\n                                  style=\"z-index: 0; position: absolute;\"\n                                >\n                                  <select class=\"form-control pl-10 py-0 my-2 border-0 text-secondary\">\n                                    <option>Mọi vị trí (Admin)</option>\n                                    <option>Vị trí của tôi</option>\n                                  </select>\n                                </div>\n                    </div>-->\n\n                    <!-- Column checkboxes -->\n                    <CandidateColumnFilterDropdown v-model=\"column_filters\"/>\n\n                    <!-- Number of candidates -->\n                    <p\n                        class=\"ml-3 my-0 text-secondary d-flex justify-content-start align-items-center\"\n                    >2 ứng viên</p>\n                </div>\n                <!-- Right buttons -->\n                <div class=\"d-flex\">\n                    <!-- More button -->\n                    <b-dropdown :disabled=\"true\" text=\"More\">\n                        <b-dropdown-item>Gửi tin nhắn</b-dropdown-item>\n                        <b-dropdown-item>Gửi câu hỏi</b-dropdown-item>\n                        <b-dropdown-item>Đánh dấu ứng viên</b-dropdown-item>\n                        <b-dropdown-item>Di chuyển ứng viên</b-dropdown-item>\n                        <b-dropdown-item>Xuất ứng viên</b-dropdown-item>\n                    </b-dropdown>\n                    <!-- Trash button -->\n                    <b-button class=\"mx-2 text-secondary\" style=\"border: none; background: #E9ECEF\" disabled>\n                        <i class=\"fas fa-trash\"></i>\n                    </b-button>\n                    <!-- Messages button -->\n                    <b-button class=\"mx-2 text-secondary\" style=\"border: none; background: #E9ECEF\" disabled>\n                        <i class=\"fas fa-comments\"></i>\n                    </b-button>\n                    <!-- Candidate email button -->\n                    <b-button class=\"mx-2 text-secondary\" style=\"border: none; background: #E9ECEF\" disabled>\n                        <i class=\"fas fa-envelope\"></i>&nbsp;\n                        Email ứng viên\n                    </b-button>\n                    <b-button class=\"mx-2\" variant=\"primary\" @click=\"addCandidate\">\n                        <i class=\"fas fa-plus\"></i>&nbsp;\n                        Thêm ứng viên\n                    </b-button>\n                </div>\n            </div>\n        </header>\n        <!-- Task content -->\n        <div class=\"d-flex flex-grow-1 flex-shrink-1 overflow-auto align-items-start\">\n            <!-- Left border -->\n            <FilterColumn :open=\"filterNav.open\"/>\n            <!-- Right border -->\n            <div class=\"p-3 flex-grow-1 overflow-auto\" style=\"max-height: 100%\">\n                <div class=\"px-0 mx-0\" style=\"background:#F9FAFA; border: 1px solid #edeff0\">\n                    <!-- Table content -->\n                    <b-form-checkbox-group v-model=\"row_check\">\n                        <b-table hover :fields=\"tableFields\" :items=\"tableItems\" :busy=\"!loaded.candidate\">\n                            <template slot=\"table-busy\">\n                                <div class=\"d-flex align-items-center flex-column\">\n                                    <h3>Loading</h3>\n                                    <b-spinner></b-spinner>\n                                </div>\n                            </template>\n\n                            <!-- CUSTOM CHECK COLUMN-->\n                            <template slot=\"HEAD_selected\">\n                                <b-form-checkbox v-on:change=\"checkAll\"></b-form-checkbox>\n                            </template>\n                            <template slot=\"selected\" slot-scope=\"{ item }\">\n                                <b-form-checkbox :value=\"item.id\"></b-form-checkbox>\n                            </template>\n\n                            <!--CUSTOM PHOTO COLUMN-->\n                            <template slot=\"photo\" slot-scope=\"data\">\n                                <b-img\n                                    :src=\"data.photo\"\n                                    rounded=\"circle\"\n                                    blankColor=\"#888\"\n                                    :blank=\"true\"\n                                    :width=\"18\"\n                                    :height=\"18\"\n                                ></b-img>\n                            </template>\n                        </b-table>\n                    </b-form-checkbox-group>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .avatarCircle {\n        color: #ffffff;\n        background: #30a6d1;\n        border-radius: 50%;\n    }\n</style>\n\n\n<script lang=\"ts\">\n    import Vue from \"vue\";\n    import CandidateTypeDropdown from \"@/components/Candidate/CandidateTypeDropdown.vue\";\n    import CandidateColumnFilterDropdown from \"@/components/Candidate/CandidateColumnFilterDropdown.vue\";\n    import FilterColumn from \"@/components/FilterColumn/FilterColumn.vue\";\n    import CandidateColumnFilter from \"@/components/Candidate/CandidateColumnFilter\";\n    import Candidate from \"@/models/Candidate\";\n    import ModalWrapper from \"@/components/ModalWrapper.vue\";\n\n    import {mapMutations} from 'vuex';\n    import {Component, Prop} from \"vue-property-decorator\";\n\n    @Component({\n        components: {\n            CandidateTypeDropdown,\n            CandidateColumnFilterDropdown,\n            FilterColumn,\n            ModalWrapper,\n        },\n        methods: {\n            ...mapMutations(['modals/showAddCandidate']),\n        }\n    })\n    export default class CandidatePage extends Vue {\n        @Prop({default: null}) position_id: string | null;\n\n        loaded = {\n            candidate: false,\n        };\n        filterNav = {\n            open: true,\n        };\n        candidates = [] as Candidate[];\n        candidateType = \"\";\n        column_filters = {...CandidateColumnFilter};\n        row_check = [] as string[];\n\n        addCandidate(): void {\n            this['modals/showAddCandidate'](true);\n        }\n\n        reset(ev: Event): void {\n            ev.preventDefault();\n        }\n\n        checkAll(checked: boolean): void {\n            if (checked)\n                this.row_check = this.candidates.map(c => c.id);\n            else\n                this.row_check = [];\n        }\n\n        async loadCandidates(): Promise<void> {\n            this.candidates = [];\n            if (this.position_id) {\n                // load by position here\n                // replace code under\n                const loadedCandidates = await Candidate.instance.getAllCandidates();\n                this.candidates = this.candidates.concat(loadedCandidates);\n            } else {\n                const loadedCandidates = await Candidate.instance.getAllCandidates();\n                this.candidates = this.candidates.concat(loadedCandidates);\n            }\n            this.loaded.candidate = true;\n        }\n\n        // COMPUTED\n        get tableItems(): any[] {\n            return [...this.candidates];\n        }\n        get tableFields(): any[] {\n            return Object.keys(this.column_filters)\n                .reduce((fields: any[], filter: any) => {\n                    if (this.column_filters[filter].check) {\n                        return [\n                            ...fields,\n                            {\n                                key: filter,\n                                label: this.column_filters[filter].text,\n                                sortable: true\n                            }\n                        ];\n                    } else {\n                        return fields;\n                    }\n                },\n                [\"selected\"]\n            );\n        }\n\n        // HOOK\n\n        mounted() {\n            this.loadCandidates().catch(err => {\n                console.log(err);\n            });\n        }\n    }\n\n    // export default Vue.extend({\n    //     name: \"CandidatesPage\",\n    //     components: {\n    //         CandidateTypeDropdown,\n    //         CandidateColumnFilterDropdown,\n    //         FilterColumn,\n    //         ModalWrapper,\n    //     },\n    //     props: {\n    //         position_id: {\n    //             type: String | null, // if null, load all\n    //             defaultValue: null,\n    //         }\n    //     },\n    //     data() {\n    //         return {\n    //             loaded: {\n    //                 candidate: false,\n    //             },\n    //             filterNav: {\n    //                 open: true,\n    //             },\n    //             candidates: [] as Candidate[],\n    //             candidateType: \"\",\n    //             column_filters: {...CandidateColumnFilter},\n    //             row_check: [] as string[],\n    //         };\n    //     },\n    //     methods: {\n    //         ...mapMutations(['modals/showAddCandidate']),\n    //\n    //         addCandidate(): void {\n    //             this['modals/showAddCandidate'](true);\n    //         },\n    //\n    //         reset(ev: Event): void {\n    //             ev.preventDefault();\n    //         },\n    //\n    //         checkAll(checked: boolean): void {\n    //             if (checked)\n    //                 this.row_check = this.candidates.map(c => c.id);\n    //             else\n    //                 this.row_check = [];\n    //         },\n    //\n    //         async loadCandidates(): Promise<void> {\n    //             this.candidates = [];\n    //             if (this.position_id) {\n    //                 // load by position here\n    //                 // replace code under\n    //                 const loadedCandidates = await Candidate.instance.getAllCandidates();\n    //                 this.candidates = this.candidates.concat(loadedCandidates);\n    //             } else {\n    //                 const loadedCandidates = await Candidate.instance.getAllCandidates();\n    //                 this.candidates = this.candidates.concat(loadedCandidates);\n    //             }\n    //             this.loaded.candidate = true;\n    //         }\n    //     },\n    //     computed: {\n    //         tableItems(): any[] {\n    //             return [...this.candidates];\n    //         },\n    //         tableFields(): any[] {\n    //             return Object.keys(this.column_filters).reduce(\n    //                 (fields: any[], filter: any) => {\n    //                     if (this.column_filters[filter].check) {\n    //                         return [\n    //                             ...fields,\n    //                             {\n    //                                 key: filter,\n    //                                 label: this.column_filters[filter].text,\n    //                                 sortable: true\n    //                             }\n    //                         ];\n    //                     } else {\n    //                         return fields;\n    //                     }\n    //                 },\n    //                 [\"selected\"]\n    //             );\n    //         }\n    //     },\n    //     mounted() {\n    //         this.loadCandidates().catch(err => {\n    //             console.log(err);\n    //         });\n    //     },\n    // });\n</script>\n"]}]}