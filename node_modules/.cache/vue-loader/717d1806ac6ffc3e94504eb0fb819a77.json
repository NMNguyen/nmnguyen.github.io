{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/tasks/CreateTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/tasks/CreateTask.vue","mtime":1557830879584},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters, mapMutations} from \"vuex\";\nimport {Datetime} from 'vue-datetime';\nimport User from \"../../models/User\";\n\nexport default {\n    name: \"createTask\",\n    components: {\n        datetime: Datetime\n    },\n    data() {\n        return {\n            assignee: this.currentUser,\n        }\n    },\n    mounted() {\n        // debugger;\n\n    },\n    watch: {\n        currentUser(val, oldVal) {\n            // debugger;\n            if (this.assignee == null) {\n                this.assignee = val;\n            }\n        }\n    },\n    computed: {\n\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentUser',\n            'currentCompany',\n            'getTask',\n            'modals/addTask',\n            'companyUsers'\n\n            // ...\n        ]),\n        modalFlag: {\n            get() {\n                return this['modals/addTask']\n            },\n            set(val) {\n                this['modals/showAddTask'](val);\n            }\n        }\n    },\n    methods: {\n        ...mapMutations([\n            'modals/showAddTask',\n            'clearCurrentTask'\n        ]),\n        insertTask() {\n            // debugger;\n\n            this.getTask.company_id = this.currentCompany.id;\n\n\n            this.getTask.upsert().then(task => {\n                console.info(\"save task successfully\");\n                this.modalFlag = false;\n\n                this.clearCurrentTask()\n            });\n\n        }\n    }\n}\n",null]}