{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/FilterColumn/FilterDropdown.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/FilterColumn/FilterDropdown.vue","mtime":1557830879566},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport {Component, Prop} from \"vue-property-decorator\";\n\n@Component\nexport default class FilterDropdown extends Vue {\n    @Prop({default: 'fas fa-circle'}) icon: string;\n    @Prop({default: 'Options'}) title: string;\n    @Prop({default: []}) value: any[];\n\n    get options(): any[] {\n        return this.value;\n    }\n    set options(arr: any[]) {\n        this.$emit(\"input\", arr);\n    }\n}\n\n// export default Vue.extend({\n//     name: \"FilterDropdown\",\n//     props: {\n//         icon: {\n//             type: String,\n//             defaultValue: 'fas fa-circle',\n//         },\n//         title: {\n//             type: String,\n//             defaultValue: 'Options',\n//         },\n//         value: {\n//             warn: Array,\n//             type: Array,\n//             defaultValue: [],\n//         }\n//     },\n//     computed: {\n//         options: {\n//             get(): any[] {\n//                 return this.value;\n//             },\n//             set(val: any[]): void {\n//                 this.$emit('input', val);\n//             }\n//         }\n//     },\n//     methods: {\n//\n//     }\n// });\n",{"version":3,"sources":["FilterDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"FilterDropdown.vue","sourceRoot":"src/components/FilterColumn","sourcesContent":["<template>\n    <b-dropdown class=\"btn-group custom-dropdown\" variant=\"gray\">\n        <template slot=\"button-content\">\n            <i :class=\"icon\"></i>&nbsp;\n            {{title}}\n        </template>\n        <b-dropdown-text class=\"check-item\" v-for=\"(option, idx) in options\" :key=\"idx\">\n            <b-form-checkbox v-model=\"option.value\">{{option.name}}</b-form-checkbox>\n        </b-dropdown-text>\n    </b-dropdown>\n</template>\n\n<script lang=\"ts\">\n    import Vue from 'vue';\n    import {Component, Prop} from \"vue-property-decorator\";\n\n    @Component\n    export default class FilterDropdown extends Vue {\n        @Prop({default: 'fas fa-circle'}) icon: string;\n        @Prop({default: 'Options'}) title: string;\n        @Prop({default: []}) value: any[];\n\n        get options(): any[] {\n            return this.value;\n        }\n        set options(arr: any[]) {\n            this.$emit(\"input\", arr);\n        }\n    }\n\n    // export default Vue.extend({\n    //     name: \"FilterDropdown\",\n    //     props: {\n    //         icon: {\n    //             type: String,\n    //             defaultValue: 'fas fa-circle',\n    //         },\n    //         title: {\n    //             type: String,\n    //             defaultValue: 'Options',\n    //         },\n    //         value: {\n    //             warn: Array,\n    //             type: Array,\n    //             defaultValue: [],\n    //         }\n    //     },\n    //     computed: {\n    //         options: {\n    //             get(): any[] {\n    //                 return this.value;\n    //             },\n    //             set(val: any[]): void {\n    //                 this.$emit('input', val);\n    //             }\n    //         }\n    //     },\n    //     methods: {\n    //\n    //     }\n    // });\n</script>\n"]}]}