{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/Analytics/Charts/LineChart.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/Analytics/Charts/LineChart.vue","mtime":1557114387675},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\nimport { Line, mixins } from 'vue-chartjs'\nimport Vue from 'vue'\nconst { reactiveProp } = mixins;\n\nexport default Vue.extend({\n    extends: Line,\n    mixins: [reactiveProp],\n    props: {\n        chartData: {} as any,\n        options: {\n            type: Object,\n            default: null\n        }\n    },\n    mounted(): void {\n        const self = (this as any);\n        self.renderChart(this.chartData, this.options);\n    }\n});\n",{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/components/Analytics/Charts","sourcesContent":["<script lang=\"ts\">\n    import { Line, mixins } from 'vue-chartjs'\n    import Vue from 'vue'\n    const { reactiveProp } = mixins;\n\n    export default Vue.extend({\n        extends: Line,\n        mixins: [reactiveProp],\n        props: {\n            chartData: {} as any,\n            options: {\n                type: Object,\n                default: null\n            }\n        },\n        mounted(): void {\n            const self = (this as any);\n            self.renderChart(this.chartData, this.options);\n        }\n    });\n</script>\n"]}]}