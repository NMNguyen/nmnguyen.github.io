{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/portal/Testimonials.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/portal/Testimonials.vue","mtime":1557830879580},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport {fauth, fstorage} from '@/firebase';\n//import {storage} from 'firebase.storage'\nimport {mapGetters} from 'vuex';\n// https://github.com/xiaokaike/vue-color\nimport {Swatches} from 'vue-color';\nimport * as firebase from \"firebase\";\n\n\nvar colors = {\n    hex: '#194d33',\n    // hsl: {h: 150, s: 0.5, l: 0.2, a: 1},\n    // hsv: {h: 150, s: 0.66, v: 0.30, a: 1},\n    // rgba: {r: 25, g: 77, b: 51, a: 1},\n    // a: 1\n}\n\nexport default Vue.extend({\n    props: {},\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentUser',\n            'currentCompany',\n            // ...\n        ]),\n\n    },\n    components: {\n        'swatches-picker': Swatches\n    },\n    data() {\n        return {\n\n            progressUpload: 0,\n            file: File,\n            uploadTask: {} as firebase.storage.UploadTask,\n            whichFile: '',\n            newTestimonial: {\n                name: '',\n                photo: '',\n                position: '',\n                testimonial: ''\n            }\n        }\n    },\n    methods: {\n        updateCompany: function () {\n            this.currentCompany.update();\n            this.$toasted.show('Saved!')\n        },\n        detectFiles(fileList, whichFile) {\n            this.whichFile = whichFile;\n            console.log(fileList);\n            Array.from(Array(fileList.length).keys()).map(x => {\n                this.upload(fileList[x])\n            })\n        },\n        upload(file) {\n            this.uploadTask = fstorage.ref('image/' + file.name).put(file);\n        },\n        addTestimonial() {\n            if (this.newTestimonial.photo == '' || this.newTestimonial.name == '' || this.newTestimonial.position == '' || this.newTestimonial.testimonial == '') {\n                this.$toasted.error('Error !!!')\n            } else {\n                this.currentCompany.testimonials.push(this.newTestimonial);\n                this.updateCompany();\n                console.log(this.currentCompany.testimonials);\n                this.newTestimonial = {\n                    name: '',\n                    photo: '',\n                    position: '',\n                    testimonial: ''\n                }\n            }\n        },\n        removeTestimonial(index) {\n            this.currentCompany.testimonials.splice(index, 1);\n            this.updateCompany();\n        }\n    },\n    watch: {\n        uploadTask: function () {\n            this.$toasted.show('Uploading ...');\n            this.uploadTask.on('state_changed', sp => {\n                    if (sp.bytesTransferred == sp.totalBytes) {\n                        this.$toasted.show('Uploaded !')\n                    }\n                },\n                null,\n                () => {\n                    this.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                        this.newTestimonial.photo = downloadURL;\n                        // this.updateCompany();\n                    })\n                })\n        }\n    }\n\n});\n",{"version":3,"sources":["Testimonials.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Testimonials.vue","sourceRoot":"src/components/portal","sourcesContent":["<template>\n\n    <div class=\"settings portal\">\n        <div class=\"main-content\">\n            <div class=\"profile nigvlxscope\">\n                <div class=\"header\">\n                    <h1>Nhận xét của nhân viên</h1>\n                </div>\n                <div class=\"company\">\n                    <div class=\"section\">\n                        <h2>Thêm Nhận xét</h2>\n                        <p>Nhân viên chia sẻ một số điều tốt đẹp khi làm việc tại doanh nghiệp của bạn. </p>\n                        <div class=\"testimonial-container upload-btn-wrapper\">\n                            <div class=\"headshot-placeholder\">\n                                <div class=\"headshot nigvlxscope\" v-if=\"!newTestimonial.photo\" @click=\"$refs.file.click()\">\n                                    <i class=\"fa fa-camera-retro\"></i>\n                                </div>\n                                <input type=\"file\" accept=\"image/*\" @change=\"detectFiles($event.target.files)\" style=\"display: none\" ref=\"file\">\n                                <img class=\"avatar\" :src=\"newTestimonial.photo\" v-if=\"newTestimonial.photo\" @click=\"$refs.file.click()\">\n\n                            </div>\n                            <input v-model=\"newTestimonial.name\"\n                                   class=\"emp-name half\"\n                                   type=\"text\"\n                                   placeholder=\"Tên nhân viên\"\n                                   required=\"required\">\n                            <div class=\"form-divider\"></div>\n                            <input v-model=\"newTestimonial.position\"\n                                   class=\"title half nigvlxpristine nigvlxuntouched nigvlxinvalid nigvlxinvalid-required\"\n                                   type=\"text\"\n                                   placeholder=\"Vị trí / Chức vụ\"\n                                   required=\"required\">\n                        </div>\n                        <div class=\"form-divider\"></div>\n                        <input v-model=\"newTestimonial.testimonial\"\n                               class=\"body full\"\n                               type=\"text\" style=\"width: 340px\"\n                               placeholder=\"e.g. I love working at Cloudjet. It's nothing but rainbows and unicorns.\"\n                               required=\"required\">\n                        <div class=\"form-divider\"></div>\n                        <a class=\"logo add btn btn-blue btn-xs\"\n                           @click=\"addTestimonial\"><i class=\"fa fa-plus\"></i><span>Thêm lời giới thiệu</span></a>\n                    </div>\n                    <div class=\"section\">\n                        <h2>Nhận xét của bạn</h2>\n                        <p nigvlxif=\"portal.testimonials.length > 0\" class=\"nigvlxscope\">Đây là những lời giới thiệu có sẵn của bạn. Nếu bạn có nhiều hơn chúng tôi hiển thị cùng một lúc, chúng tôi sẽ chuyển qua chúng ngẫu nhiên.</p><!-- end ngIf: portal.testimonials.length > 0 -->\n                        <!-- ngIf: portal.testimonials.length === 0 -->\n                        <ul class=\"testimonials\">\n                            <!-- ngRepeat: testimonial in portal.testimonials -->\n                            <li class=\"testimonial nigvlxscope\" v-for=\"(testimonial, index) in currentCompany.testimonials\">\n                                <img class=\"avatar-sm\" :src=\"testimonial.photo\">\n                                <div class=\"content\">\n                                    <h4>{{testimonial.name}}</h4>\n                                    <h5>{{testimonial.position}}</h5>\n                                    <div class=\"body\"><i class=\"fa fa-quote-left\"></i>\n                                        <p class=\"nigvlxbinding\">{{testimonial.testimonial}}</p>\n                                    </div>\n                                    <a class=\"remove\" @click=\"removeTestimonial(index)\">\n                                        <i class=\"fa fa-times\"></i><span> Xóa</span>\n                                    </a>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"footer align-right\">\n                    <button @click=\"updateCompany\" class=\"btn btn-blue default\"\n                            type=\"submit\">\n                        <i class=\"default fa fa-save\"></i>\n                        <span class=\"default\">Lưu</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n\n<style>\n    .upload-btn-wrapper {\n        position: relative;\n        overflow: hidden;\n        display: inline-block;\n    }\n\n    img.avatar {\n        height: 100%;\n        width: 100%;\n        border-radius: 0;\n    }\n\n    .avatar-sm {\n        border-radius: 100%;\n        border: 2px solid #fff;\n        display: inline-block;\n        height: 40px;\n        vertical-align: middle;\n        width: 40px;\n    }\n</style>\n\n\n<script lang=\"ts\">\n    import Vue from \"vue\";\n    import {fauth, fstorage} from '@/firebase';\n    //import {storage} from 'firebase.storage'\n    import {mapGetters} from 'vuex';\n    // https://github.com/xiaokaike/vue-color\n    import {Swatches} from 'vue-color';\n    import * as firebase from \"firebase\";\n\n\n    var colors = {\n        hex: '#194d33',\n        // hsl: {h: 150, s: 0.5, l: 0.2, a: 1},\n        // hsv: {h: 150, s: 0.66, v: 0.30, a: 1},\n        // rgba: {r: 25, g: 77, b: 51, a: 1},\n        // a: 1\n    }\n\n    export default Vue.extend({\n        props: {},\n        computed: {\n            // mix the getters into computed with object spread operator\n            ...mapGetters([\n                'currentUser',\n                'currentCompany',\n                // ...\n            ]),\n\n        },\n        components: {\n            'swatches-picker': Swatches\n        },\n        data() {\n            return {\n\n                progressUpload: 0,\n                file: File,\n                uploadTask: {} as firebase.storage.UploadTask,\n                whichFile: '',\n                newTestimonial: {\n                    name: '',\n                    photo: '',\n                    position: '',\n                    testimonial: ''\n                }\n            }\n        },\n        methods: {\n            updateCompany: function () {\n                this.currentCompany.update();\n                this.$toasted.show('Saved!')\n            },\n            detectFiles(fileList, whichFile) {\n                this.whichFile = whichFile;\n                console.log(fileList);\n                Array.from(Array(fileList.length).keys()).map(x => {\n                    this.upload(fileList[x])\n                })\n            },\n            upload(file) {\n                this.uploadTask = fstorage.ref('image/' + file.name).put(file);\n            },\n            addTestimonial() {\n                if (this.newTestimonial.photo == '' || this.newTestimonial.name == '' || this.newTestimonial.position == '' || this.newTestimonial.testimonial == '') {\n                    this.$toasted.error('Error !!!')\n                } else {\n                    this.currentCompany.testimonials.push(this.newTestimonial);\n                    this.updateCompany();\n                    console.log(this.currentCompany.testimonials);\n                    this.newTestimonial = {\n                        name: '',\n                        photo: '',\n                        position: '',\n                        testimonial: ''\n                    }\n                }\n            },\n            removeTestimonial(index) {\n                this.currentCompany.testimonials.splice(index, 1);\n                this.updateCompany();\n            }\n        },\n        watch: {\n            uploadTask: function () {\n                this.$toasted.show('Uploading ...');\n                this.uploadTask.on('state_changed', sp => {\n                        if (sp.bytesTransferred == sp.totalBytes) {\n                            this.$toasted.show('Uploaded !')\n                        }\n                    },\n                    null,\n                    () => {\n                        this.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                            this.newTestimonial.photo = downloadURL;\n                            // this.updateCompany();\n                        })\n                    })\n            }\n        }\n\n    });\n</script>\n"]}]}