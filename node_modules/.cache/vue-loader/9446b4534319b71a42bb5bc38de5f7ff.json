{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/modals/PinelineStage/AddStageModal.vue?vue&type=style&index=0&id=c3d28bbc&lang=scss&scoped=true&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/modals/PinelineStage/AddStageModal.vue","mtime":1557885684550},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/css-loader/index.js","mtime":1557114467524},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1557114467992},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/postcss-loader/src/index.js","mtime":1557114467782},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/sass-loader/lib/loader.js","mtime":1557114472674},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.flex-box-right i{\n    margin-left:10px;\n    font-size:10px;\n}\n.btn-custom{\n    margin-top:10px;\n    font-size: 12px !important;\n    height: initial !important;\n    padding: 2px 8px;\n    background-color: #5ac0e5 !important;\n    color: #fff !important;\n    border:none;\n}\n.btn-custom:hover{\n    font-size: 12px;\n    background-color: #4cabcd !important;\n    color: #fff !important;\n}\n.state-item{\n    justify-content: space-between;\n    display:flex;\n    align-content:center;\n    background:#edeff0;\n    height:40px;\n    padding:10px;\n}\n.btn-blue{\n    border:none;\n    padding:5px 12px;\n    font-weight:bold;\n    /*font-size: 21px !important;*/\n}\n.custom-select{\n    width:176px;\n}\n",{"version":3,"sources":["AddStageModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddStageModal.vue","sourceRoot":"src/components/modals/PinelineStage","sourcesContent":["<template>\n    <b-modal\n        @show=\"handleOpenModal\"\n        no-close-on-esc\n        no-close-on-backdrop\n        v-model=\"showModal\">\n        <template slot=\"modal-header\" slot-scope=\"{ close }\">\n            <h1>{{messages.SR_007_MODAL_STAGE_TITLE}}</h1>\n            <b-button size=\"sm\" class=\"button-add-pipeline\" variant=\"secondary\" @click=\"handleCloseModal()\">\n                <i class=\"fa fa-times\"></i>\n            </b-button>\n        </template>\n        <div>\n            <h5>{{messages.SR_007_MODAL_STAGE_INPUT_TITLE}}</h5>\n            <b-form-input :class=\"{'isError':isErrorForm.stageNameInput}\" v-model=\"currentTitleStage\" :placeholder=\"messages.SR_007_MODAL_STAGE_INPUT_REQUIRED\"></b-form-input>\n            <div v-if=\"stageData == null || (stageData != null && stageData.stage_type != 'applied')\">\n                <h5 style=\"margin-top:10px\">{{messages.SR_007_MODAL_STAGE_STAGE_TITLE}}</h5>\n                <b-form-select v-model=\"stageData.stage_type\" class=\"mb-3 custom-select\" :class=\"{'isError':isErrorForm.stageType}\" v-if=\"type=='edit'\">\n                    <option :value=\"null\" disabled>{{messages.SR_007_MODAL_STAGE_STAGE_TITLE}}</option>\n                    <option :value=\"stage.stage_type\" v-for=\"stage in listPipelineStage\" v-if=\"!stage.disabledRemove\">{{stage.title}}</option>\n                </b-form-select>\n                <b-form-select v-model=\"stageData\" class=\"mb-3 custom-select\" :class=\"{'isError':isErrorForm.stageType}\" v-else>\n                    <option :value=\"null\" disabled>{{messages.SR_007_MODAL_STAGE_STAGE_TITLE}}</option>\n                    <option :value=\"stage\" v-for=\"stage in listPipelineStage\" v-if=\"!stage.disabledRemove\">{{stage.title}}</option>\n                </b-form-select>\n            </div>\n        </div>\n        <div>\n            <h5>{{messages.SR_007_MODAL_STAGE_STAGE_ACTIONS}}</h5>\n            <p>{{messages.SR_007_MODAL_STAGE_STAGE_ACTIONS_DESCRIPTION}}</p>\n            <b-form-select v-model=\"selectedOptionAction\" :options=\"optionsAction\" class=\"mb-3\">\n            </b-form-select>\n        </div>\n        <template slot=\"modal-footer\" slot-scope=\"{ ok }\">\n            <!-- Emulate built in modal footer ok and cancel button actions -->\n            <p v-if=\"isProcessing\">{{messages.SR_007_MODAL_STAGE_ADDING}}</p>\n            <b-button size=\"sm\" variant=\"primary\" class=\"btn btn-blue\" @click=\"saveChange()\">\n                <i class=\"fa fa-save\"></i> {{messages.SR_007_MODAL_PIPELINE_BUTTON_SAVE}}\n            </b-button>\n        </template>\n    </b-modal>\n</template>\n\n<script>\n    import PinelineState from \"../../../models/PipelineStage\";\n    import {mapGetters, mapActions} from 'vuex';\n    const _ = require('lodash');\n    import {messages} from \"../../../messages\";\n\n    export default {\n\n        name: \"AddStagePipeline\",\n        props: {\n            showModal: {\n                type: Boolean,\n                default: false\n            },\n            type: {\n                type: String,\n                default: 'new'\n            },\n            stageData:{\n                type: Object,\n                default:()=> null,\n            },\n            titleStage:{\n                type: String,\n                default: '',\n            }\n        },\n        data() {\n            return {\n                showModalAddState:false,\n                selectedOptionAction: null,\n                currentTitleStage: '',\n                currentState: null,\n                optionsAction: [\n                    { value: null, text: 'Available Stage Actions' , disabled: true},\n                    { value: 'a', text: 'Send Email/SMS' },\n                    { value: 'b', text: 'Send Questionnaire' },\n                    { value: 'c', text: 'Team Feedback' },\n                    { value: 'd', text: 'Candidate Scorecards'},\n                ],\n                isErrorForm: {\n                    stageNameInput: false,\n                    stageType: false,\n                },\n                isProcessing: false\n        }\n        },\n        computed:{\n            ...mapGetters([\n                'cachePipeline',\n                'listPipelineStage',\n                'currentCompany'\n            ]),\n        },\n        methods: {\n            ...mapActions([\n               'currentPipeline',\n                'setCachePipeline',\n                'setListPipelineStage'\n            ]),\n            async handleOpenModal(){\n                this.isErrorForm =  {\n                    stageNameInput: false,\n                    stageType: false,\n                }\n                if (this.listPipelineStage.length == 0){\n                    await new PinelineState().getAllStages('default').then((data)=>{\n                        this.setListPipelineStage(data);\n                        console.log(data);\n                    });\n                }\n                this.currentTitleStage = this.titleStage;\n            },\n            saveChange(){\n                if (this.stageData == null){\n                    this.isErrorForm.stageType = true;\n                }else{\n                    this.isErrorForm.stageType = false;\n                }\n                if (this.currentTitleStage.trim() == ''){\n                    this.isErrorForm.stageNameInput = true;\n                }else{\n                    this.isErrorForm.stageNameInput = false;\n                }\n                if (this.isErrorForm.stageType || this.isErrorForm.stageNameInput){\n                    return;\n                }\n                switch (this.type) {\n                    case 'new':\n                        this.createPipelineStage();\n                        break;\n                    case 'edit':\n                        this.editPipelineStage();\n                        break;\n                }\n            },\n            createPipelineStage(){\n                let _newPipelineStage = {};\n                let lengthListStage = _.sumBy(this.cachePipeline.list_state, (state)=>{\n                    return state.showInPositionPipelineStageModal == true;\n                });\n                Object.assign(_newPipelineStage, this.stageData);\n                _newPipelineStage.title = this.currentTitleStage;\n                _newPipelineStage.id = '';\n                _newPipelineStage.pipeline_id = '';\n                _newPipelineStage.deleted = false;\n                _newPipelineStage.index = lengthListStage + 1;\n                _newPipelineStage.showInPositionPipelineStageModal = true;\n                this.cachePipeline.list_state.push(_newPipelineStage);\n                this.handleCloseModal();\n            },\n            editPipelineStage( ){\n                let _newPipelineStage = {};\n                let findStageChanged = this.listPipelineStage.find((stage)=>{\n                    return stage.stage_type == this.stageData.stage_type;\n                })\n                Object.assign(_newPipelineStage, findStageChanged);\n                _newPipelineStage.pipeline_id = this.stageData.pipeline_id;\n                _newPipelineStage.id = this.stageData.id;\n                _newPipelineStage.title = this.currentTitleStage;\n                _newPipelineStage.deleted = false;\n                _newPipelineStage.index = this.stageData.index;\n                _newPipelineStage.showInPositionPipelineStageModal = true;\n                this.cachePipeline.list_state.splice(this.stageData.indexInCurrentArray, 1 , _newPipelineStage);\n                this.setCachePipeline(this.cachePipeline);\n                this.handleCloseModal();\n            },\n            handleCloseModal() {\n                this.$emit('handleClose')\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .flex-box-right i{\n        margin-left:10px;\n        font-size:10px;\n    }\n    .btn-custom{\n        margin-top:10px;\n        font-size: 12px !important;\n        height: initial !important;\n        padding: 2px 8px;\n        background-color: #5ac0e5 !important;\n        color: #fff !important;\n        border:none;\n    }\n    .btn-custom:hover{\n        font-size: 12px;\n        background-color: #4cabcd !important;\n        color: #fff !important;\n    }\n    .state-item{\n        justify-content: space-between;\n        display:flex;\n        align-content:center;\n        background:#edeff0;\n        height:40px;\n        padding:10px;\n    }\n    .btn-blue{\n        border:none;\n        padding:5px 12px;\n        font-weight:bold;\n        /*font-size: 21px !important;*/\n    }\n    .custom-select{\n        width:176px;\n    }\n</style>\n<style scoped>\n    >>>.modal-header{\n        border-bottom:none;\n        padding-bottom:0px;\n    }\n    >>>.modal.show .modal-dialog{\n        padding-left: 30px;\n        padding-right: 30px;\n        border-radius: 5px;\n        background: #edeff0;\n    }\n    >>>.modal-content{\n        border:none;\n    }\n    >>>.modal-body{\n        padding-top:0px;\n    }\n    >>>.modal-footer{\n        border-top:none;\n        background-color:#f9fafa;\n        border-top: 1px solid #edeff0;\n    }\n    >>>.button-add-pipeline{\n        padding: 10px;\n        padding-left: 15px;\n        position: absolute;\n        right: 0;\n        border: none;\n        font-weight: bold;\n        background: #edeff0;\n        top: 0;\n        font-size:21px!important;\n        color:#4c555c;\n    }\n</style>\n"]}]}