{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/App.vue","mtime":1557830879555},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/css-loader/index.js","mtime":1557114467524},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1557114467992},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/postcss-loader/src/index.js","mtime":1557114467782},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/sass-loader/lib/loader.js","mtime":1557114472674},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#app {\n    /*font-family: 'Avenir', Helvetica, Arial, sans-serif;*/\n    font-family: Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    /*text-align: center;*/\n    color: #2c3e50;\n}\n\n.app-content {\n    /*margin-top: 20px;*/\n}\n\n#nav {\n    padding: 30px;\n\n    a {\n        font-weight: bold;\n        color: #2c3e50;\n\n        &.router-link-exact-active {\n            color: #42b983;\n        }\n    }\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div v-if=\"loading\" class=\"d-flex flex-column justify-content-center align-items-center\" style=\"min-height: 100vh\">\n        <b-spinner style=\"width: 64px; height: 64px\"></b-spinner>\n        <h2>Đang tải</h2>\n    </div>\n    <div v-else id=\"app\" class=\"app\">\n        <Sidebar v-if=\"hasSidebar\"></Sidebar>\n        <ModalWrapper class=\"app-content\">\n            <router-view class=\"main\"></router-view>\n        </ModalWrapper>\n        <create-task></create-task>\n        <AddCandidateModal></AddCandidateModal>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    #app {\n        /*font-family: 'Avenir', Helvetica, Arial, sans-serif;*/\n        font-family: Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        /*text-align: center;*/\n        color: #2c3e50;\n    }\n\n    .app-content {\n        /*margin-top: 20px;*/\n    }\n\n    #nav {\n        padding: 30px;\n\n        a {\n            font-weight: bold;\n            color: #2c3e50;\n\n            &.router-link-exact-active {\n                color: #42b983;\n            }\n        }\n    }\n</style>\n\n\n<script lang=\"ts\">\n    import Vue from \"vue\";\n    import Nav from \"@/components/Nav.vue\"; // @ is an alias to /src\n    import Sidebar from \"@/components/Sidebar/Sidebar.vue\";\n    import CreateTask from \"@/components/tasks/CreateTask.vue\";\n    import ModalWrapper from \"@/components/ModalWrapper.vue\";\n    import AddCandidateModal from '@/components/modals/AddCandidateModal.vue';\n    import {messages} from \"@/messages\";\n\n    Vue.mixin({\n        data: function() {\n            return {\n                messages: messages,\n            }\n        }\n    })\n\n    export default Vue.extend({\n        name: \"home\",\n        components: {\n            Nav,\n            Sidebar,\n            CreateTask,\n            ModalWrapper,\n            AddCandidateModal,\n        },\n        data() {\n            return {\n                loading: true,\n                showModal: this.$route.meta.showModal,\n            }\n        },\n\n\n        computed: {\n            hasSidebar(): boolean {\n                return this.$route.path !== \"/login\";\n            }\n        },\n        created() {\n            // when the app is created run the set user method\n            // this uses Vuex to check if a user is signed in\n            // check out mutations in the store.js file\n            this.setUser();\n            window.onunhandledrejection = (error) => {\n                this.$toasted.error(error.reason);\n            }\n            window.onerror = (error) => {\n                this.$toasted.error(error + '');\n            }\n        },\n        methods: {\n            async setUser(): Promise<void> {\n                await this.$store.dispatch(\"setUser\");\n                this.loading = false;\n            }\n        },\n    });\n</script>\n"]}]}