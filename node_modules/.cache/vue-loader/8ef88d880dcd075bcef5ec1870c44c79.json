{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue","mtime":1557830879582},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport User from \"@/models/User\";\nimport {fauth} from '@/firebase';\nimport firebase from '@/firebase';\nimport {mapGetters} from 'vuex';\n\n\nexport default Vue.extend({\n\n    name: \"UserPassword\",\n    data() {\n        return {\n            old_password: '',\n            password: '',\n            confirm_password: '',\n            saveflag: false,\n            error: false,\n            email: '',\n            errorMessage: '',\n\n        }\n    },\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentUser',\n            'currentCompany',\n            // ...\n        ]),\n    },\n    watch: {\n        currentUser: function (user) {\n            const self = this;\n            self.email = self.currentUser.email;\n        }\n    },\n    mounted: function () {\n\n        const self = this;\n\n\n        if (self.currentUser) {\n            self.email = self.currentUser.email;\n        }\n\n\n    },\n    methods: {\n        validate: function () {\n            const self = this;\n            let flag = true;\n            self.errorMessage = \"\";\n\n\n            if (self.password == \"\") {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_NULL;\n            } else if (self.password.length < 6) {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_MIN;\n            } else if (self.password != self.confirm_password) {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_MISMATCHED;\n\n            }\n\n\n            return flag;\n        },\n        SavePassword: function () {\n            const self = this;\n\n            var user = fauth.currentUser;\n\n            self.password = self.password.trim();\n            self.confirm_password = self.confirm_password.trim();\n\n            //xac thuc credentials\n            var credential = firebase.auth.EmailAuthProvider.credential(\n                user.email,\n                self.old_password\n            );\n\n            console.log(credential);\n\n            self.error = false;\n\n            if (user) {\n\n                if (user.email) {\n\n                    self.error = false;\n                    console.log(self.email);\n\n                    // lay xac thuc xong moi update lai password\n\n                    user.reauthenticateAndRetrieveDataWithCredential(credential).then(function () {\n\n                        if (self.validate()) {\n                            user.updatePassword(self.password).then(function () {\n                                self.saveflag = true;\n\n                                self.old_password = \"\";\n                                self.password = \"\";\n                                self.confirm_password = \"\";\n\n                                self.$toasted.show(self.messages.COMMON_SAVED);\n\n                                setTimeout(function () {\n                                    self.saveflag = false;\n                                }, 1000);\n                            }).catch(function (error) {\n                                console.log(error);\n                                self.error = true;\n                                if (error.code == \"auth/weak-password\")\n                                    self.errorMessage = self.messages.SR_001_PASS_MIN;\n                                else\n                                    self.errorMessage = self.messages.SR_001_PASS_SAVE_FAIL;\n                            });\n                        } else {\n                            self.error = true;\n                        }\n                    }).catch(function (error) {\n                        console.log(error);\n                        if (error.code == \"auth/wrong-password\")\n                            self.errorMessage = self.messages.SR_001_WRONG_PASS;\n                        else\n                            self.errorMessage = error;\n                        self.error = true;\n                    });\n                } else {\n                    self.errorMessage = \"User không tồn tại\";\n                    self.error = true;\n                }\n            } else {\n                self.errorMessage = \"User không tồn tại\";\n                self.error = true;\n            }\n\n\n        }\n    }\n\n});\n",null]}