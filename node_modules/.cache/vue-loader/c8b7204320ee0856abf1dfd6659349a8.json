{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/General.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/General.vue","mtime":1557830879581},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport {fauth} from '@/firebase';\nimport {mapGetters} from 'vuex';\nimport ModalWrapper from \"@/components/ModalWrapper.vue\";\n\n\nexport default Vue.extend({\n    data() {\n        return {\n            saveflag: false,\n            name:'',\n\n        }\n\n    },\n    components: {\n        ModalWrapper,\n    },\n    props: {},\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentUser',\n            'currentCompany',\n            // ...\n        ]),\n    },\n    watch: {\n        currentCompany: function (company) {\n            const self = this;\n            self.name = company.name;\n        }\n    },\n    mounted:function () {\n        var self =this;\n\n        if (self.currentCompany) {\n              self.name =  self.currentCompany.name;\n        }\n    },\n    methods: {\n        updateCompany(): void {\n            var self =this;\n            self.currentCompany.name =  self.name;\n\n            self.currentCompany.update().then(function () {\n                self.saveflag = true;\n\n                setTimeout(function () {\n                    self.saveflag = false;\n                }, 2000);\n            }).catch(err=>{\n\n            })\n        }\n    },\n});\n",null]}