{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/tasks/TaskListItem.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/tasks/TaskListItem.vue","mtime":1557830879584},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\n\nexport default Vue.extend({\n    name: \"TaskListItem\",\n    props: ['value'],\n    computed: {\n        item(): any {\n            return this.value;\n        },\n        this_class(): any {\n            if (typeof this.$attrs.class === \"object\") {\n                return {\n                    ...(this.$attrs.class as object),\n                    'task-list-item': true,\n                }\n            } else {\n                return this.$attrs.class + ' task-list-item';\n            }\n        }\n    },\n    methods: {\n        handleClick(item: any): void {\n            this.$emit(\"click\", item);\n        }\n    }\n})\n",{"version":3,"sources":["TaskListItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TaskListItem.vue","sourceRoot":"src/components/tasks","sourcesContent":["<template>\n    <b-list-group-item  :class=\"this_class\"\n                        @click=\"handleClick(item)\">\n        <div class=\"text-secondary\">\n            <div class=\"row\">\n                <div class=\"col-2 p-0 d-flex justify-content-center align-items-center\">\n                    <b-button class=\"task-check\" title=\"Đánh dấu đã hoàn thành\">\n                        <i class=\"fas fa-check\"></i>\n                    </b-button>\n                </div>\n                <div class=\"col-10 container\">\n                    <h6 class=\"my-0\">\n                        <b>\n                            {{item.title}}\n                        </b>\n                    </h6>\n                    <i class=\"fas fa-clock\"></i>\n                    <small>\n                        {{ new Date(item.deadline).toLocaleString() }}\n\n                    </small>\n                    <i class=\"fas fa-user\"></i>\n                    <small>\n                        {{ item.assignee.name }}\n                    </small>\n                </div>\n            </div>\n        </div>\n    </b-list-group-item>\n</template>\n\n<style lang=\"scss\">\n    .task {\n        &-check {\n            width: 40px;\n            height: 40px;\n            font-size: 1.25em;\n            padding: 0;\n            border: 3px solid #ccc;\n            line-height: 40px;\n            text-align: center;\n            background-color: white;\n            color: var(--secondary);\n            border-radius: 50%;\n            &:hover {\n                border-color: var(--success);\n                background-color: var(--success);\n                color: white;\n            }\n        }\n    }\n    .task-list {\n        &-item {\n            border-left: 6px solid #ccc;\n            &.currentActive {\n                border-left-color: var(--success);\n            }\n        }\n    }\n</style>\n\n<script lang=\"ts\">\n    import Vue from 'vue';\n\n    export default Vue.extend({\n        name: \"TaskListItem\",\n        props: ['value'],\n        computed: {\n            item(): any {\n                return this.value;\n            },\n            this_class(): any {\n                if (typeof this.$attrs.class === \"object\") {\n                    return {\n                        ...(this.$attrs.class as object),\n                        'task-list-item': true,\n                    }\n                } else {\n                    return this.$attrs.class + ' task-list-item';\n                }\n            }\n        },\n        methods: {\n            handleClick(item: any): void {\n                this.$emit(\"click\", item);\n            }\n        }\n    })\n</script>\n"]}]}