{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/Calendar/CalendarPage.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/Calendar/CalendarPage.vue","mtime":1557830879564},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/thread-loader/dist/cjs.js","mtime":1557114467785},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport FullCalendar from '@fullcalendar/vue';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport InteractionPlugin from '@fullcalendar/interaction';\n//import {Modal} from 'bootstrap-vue';\n\nimport viPlugin from \"@fullcalendar/core/locales/vi\";\nimport OptionDropdown from \"@/components/OptionDropdown/OptionDropdown.vue\";\nimport EventOwnerTypes from '@/components/Calendar/EventOwnerOptions';\nimport {Component, Prop} from \"vue-property-decorator\";\n\n@Component({\n    components: {\n        FullCalendar,\n        OptionDropdown,\n    },\n})\nexport default class CalendarPage extends Vue {\n    @Prop({default: null}) position_id: string | null;\n\n    calendarPlugins = [\n        dayGridPlugin,\n        timeGridPlugin,\n        InteractionPlugin,\n    ];\n    viPlugin = viPlugin;\n    calendarHeader = {\n        left: \"today prev,next\",\n        center: \"title\",\n        right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n    };\n\n    event_owner_filters = '';\n    event_owner_options = EventOwnerTypes;\n\n    newEvent = {\n        startStr: \"\",\n        endStr: \"\",\n    };\n    allEvents = [\n        {\n            title: \"My Event\",\n            assigned: {\n                id: 'asdasdasd',\n                name: \"An\",\n                position_id: \"123\"\n            },\n            start: \"2019-04-19 9:00 (GMT+7)\",\n            end: \"2019-04-23 15:30 (GMT+7)\",\n            // allDay: true,\n            color: 'blue',\n            textColor: 'white',\n            editable: true,\n            id: 'asdasd',\n        },\n        {\n            title: \"Dinh's Event\",\n            assigned: {\n                id: 'dsadasdsa',\n                name: \"Hong Viet Le\",\n                position_id: \"456\",\n            },\n            start: \"2019-04-15 11:30 (GMT+7)\",\n            end: \"2019-04-15 15:30 (GMT+7)\",\n            color: 'green',\n            textColor: 'white',\n            id: 'abcabcbac',\n        }\n    ];\n\n    // TEST DATA\n    positions = [\n        {\n            id: \"123\",\n            name: \"Dev\",\n        },\n        {\n            id: \"456\",\n            name: \"Tester\",\n        }\n    ];\n    position_filters = [] as string[];\n\n\n    get events(): any[]\n    {\n        return this.allEvents.filter((ev) => {\n            return ( // owner filter\n                this.event_owner_filters == 'all'\n                || (this.event_owner_filters == 'own' && ev.assigned.name === 'An')\n                || (this.event_owner_filters == 'other' && ev.assigned.name !== 'An')\n            ) && ( // position filter\n                this.position_filters.includes(ev.assigned.position_id)\n                || this.position_filters.length === 0\n            );\n        })\n    }\n\n    eventClick(objEvent: any): void {\n        this.$router.push(`/event/${objEvent.event.id}`);\n    }\n\n    dateSelect(objEvent: any): void {\n        this.newEvent = objEvent;\n        (this.$refs.addEventModal as any).show();\n    }\n}\n",null]}