{"remainingRequest":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Volumes/Data/app.cloudjet.work/src/components/settings/UserPassword.vue","mtime":1557830879582},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/babel-loader/lib/index.js","mtime":1557114461372},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/ts-loader/index.js","mtime":1557114465832},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/cache-loader/dist/cjs.js","mtime":1557114467143},{"path":"/Volumes/Data/app.cloudjet.work/node_modules/vue-loader/lib/index.js","mtime":1557114467992}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport User from \"@/models/User\";\nimport {fauth} from '@/firebase';\nimport firebase from '@/firebase';\nimport {mapGetters} from 'vuex';\n\n\nexport default Vue.extend({\n\n    name: \"UserPassword\",\n    data() {\n        return {\n            old_password: '',\n            password: '',\n            confirm_password: '',\n            saveflag: false,\n            error: false,\n            email: '',\n            errorMessage: '',\n\n        }\n    },\n    computed: {\n        // mix the getters into computed with object spread operator\n        ...mapGetters([\n            'currentUser',\n            'currentCompany',\n            // ...\n        ]),\n    },\n    watch: {\n        currentUser: function (user) {\n            const self = this;\n            self.email = self.currentUser.email;\n        }\n    },\n    mounted: function () {\n\n        const self = this;\n\n\n        if (self.currentUser) {\n            self.email = self.currentUser.email;\n        }\n\n\n    },\n    methods: {\n        validate: function () {\n            const self = this;\n            let flag = true;\n            self.errorMessage = \"\";\n\n\n            if (self.password == \"\") {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_NULL;\n            } else if (self.password.length < 6) {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_MIN;\n            } else if (self.password != self.confirm_password) {\n                flag = false;\n                self.errorMessage = self.messages.SR_001_PASS_MISMATCHED;\n\n            }\n\n\n            return flag;\n        },\n        SavePassword: function () {\n            const self = this;\n\n            var user = fauth.currentUser;\n\n            self.password = self.password.trim();\n            self.confirm_password = self.confirm_password.trim();\n\n            //xac thuc credentials\n            var credential = firebase.auth.EmailAuthProvider.credential(\n                user.email,\n                self.old_password\n            );\n\n            console.log(credential);\n\n            self.error = false;\n\n            if (user) {\n\n                if (user.email) {\n\n                    self.error = false;\n                    console.log(self.email);\n\n                    // lay xac thuc xong moi update lai password\n\n                    user.reauthenticateAndRetrieveDataWithCredential(credential).then(function () {\n\n                        if (self.validate()) {\n                            user.updatePassword(self.password).then(function () {\n                                self.saveflag = true;\n\n                                self.old_password = \"\";\n                                self.password = \"\";\n                                self.confirm_password = \"\";\n\n                                self.$toasted.show(self.messages.COMMON_SAVED);\n\n                                setTimeout(function () {\n                                    self.saveflag = false;\n                                }, 1000);\n                            }).catch(function (error) {\n                                console.log(error);\n                                self.error = true;\n                                if (error.code == \"auth/weak-password\")\n                                    self.errorMessage = self.messages.SR_001_PASS_MIN;\n                                else\n                                    self.errorMessage = self.messages.SR_001_PASS_SAVE_FAIL;\n                            });\n                        } else {\n                            self.error = true;\n                        }\n                    }).catch(function (error) {\n                        console.log(error);\n                        if (error.code == \"auth/wrong-password\")\n                            self.errorMessage = self.messages.SR_001_WRONG_PASS;\n                        else\n                            self.errorMessage = error;\n                        self.error = true;\n                    });\n                } else {\n                    self.errorMessage = \"User không tồn tại\";\n                    self.error = true;\n                }\n            } else {\n                self.errorMessage = \"User không tồn tại\";\n                self.error = true;\n            }\n\n\n        }\n    }\n\n});\n",{"version":3,"sources":["UserPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA","file":"UserPassword.vue","sourceRoot":"src/components/settings","sourcesContent":["<template>\n    <div class=\"content\">\n        <h1>{{messages.SR_001_PASSWORD}}</h1>\n        <p>{{messages.SR_001_PASSWORD_DESCR}}</p>\n        <div>\n            <div class=\"my-3\">\n                <input type=\"password\" name=\"old_password\" autocomplete=\"off\" :placeholder=\"messages.SR_001_PASSWORD\"\n                       v-model=\"old_password\">\n            </div>\n            <div class=\"my-3\">\n                <input type=\"password\" name=\"new_password\" autocomplete=\"off\" :placeholder=\"messages.SR_001_NEW_PASSWORD\"\n                       v-model=\"password\">\n            </div>\n            <div class=\"my-3\">\n                <input type=\"password\" name=\"confirm_password\" autocomplete=\"off\" :placeholder=\"messages.SR_001_CONFIRM_PASSWORD\"\n                       v-model=\"confirm_password\">\n\n            </div>\n            <div class=\"my-3\" v-if=\"error\">\n                   <span style=\"color: red; padding-left: 10px;\"\n                         v-if=\"error\"> {{errorMessage}}</span>\n            </div>\n            <div class=\"d-flex justify-content-end\">\n                <button class=\"my-3 btn btn-blue default\" @click=\"SavePassword\">\n                    <i class=\"default fa fa-save\" v-if=\"!saveflag\">&nbsp;&nbsp;</i>\n                    <span class=\"default\" v-if=\"!saveflag\">{{messages.COMMON_SAVE}}</span>\n                    <i class=\"success fa fa-check\" v-if=\"saveflag\">&nbsp;&nbsp;</i>\n                    <span class=\"success\" v-if=\"saveflag\">{{messages.COMMON_SAVED}}</span>\n                </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style lang=\"scss\">\n    .content {\n        padding: 20px;\n    }\n\n</style>\n\n<script lang=\"ts\">\n    import Vue from \"vue\";\n    import User from \"@/models/User\";\n    import {fauth} from '@/firebase';\n    import firebase from '@/firebase';\n    import {mapGetters} from 'vuex';\n\n\n    export default Vue.extend({\n\n        name: \"UserPassword\",\n        data() {\n            return {\n                old_password: '',\n                password: '',\n                confirm_password: '',\n                saveflag: false,\n                error: false,\n                email: '',\n                errorMessage: '',\n\n            }\n        },\n        computed: {\n            // mix the getters into computed with object spread operator\n            ...mapGetters([\n                'currentUser',\n                'currentCompany',\n                // ...\n            ]),\n        },\n        watch: {\n            currentUser: function (user) {\n                const self = this;\n                self.email = self.currentUser.email;\n            }\n        },\n        mounted: function () {\n\n            const self = this;\n\n\n            if (self.currentUser) {\n                self.email = self.currentUser.email;\n            }\n\n\n        },\n        methods: {\n            validate: function () {\n                const self = this;\n                let flag = true;\n                self.errorMessage = \"\";\n\n\n                if (self.password == \"\") {\n                    flag = false;\n                    self.errorMessage = self.messages.SR_001_PASS_NULL;\n                } else if (self.password.length < 6) {\n                    flag = false;\n                    self.errorMessage = self.messages.SR_001_PASS_MIN;\n                } else if (self.password != self.confirm_password) {\n                    flag = false;\n                    self.errorMessage = self.messages.SR_001_PASS_MISMATCHED;\n\n                }\n\n\n                return flag;\n            },\n            SavePassword: function () {\n                const self = this;\n\n                var user = fauth.currentUser;\n\n                self.password = self.password.trim();\n                self.confirm_password = self.confirm_password.trim();\n\n                //xac thuc credentials\n                var credential = firebase.auth.EmailAuthProvider.credential(\n                    user.email,\n                    self.old_password\n                );\n\n                console.log(credential);\n\n                self.error = false;\n\n                if (user) {\n\n                    if (user.email) {\n\n                        self.error = false;\n                        console.log(self.email);\n\n                        // lay xac thuc xong moi update lai password\n\n                        user.reauthenticateAndRetrieveDataWithCredential(credential).then(function () {\n\n                            if (self.validate()) {\n                                user.updatePassword(self.password).then(function () {\n                                    self.saveflag = true;\n\n                                    self.old_password = \"\";\n                                    self.password = \"\";\n                                    self.confirm_password = \"\";\n\n                                    self.$toasted.show(self.messages.COMMON_SAVED);\n\n                                    setTimeout(function () {\n                                        self.saveflag = false;\n                                    }, 1000);\n                                }).catch(function (error) {\n                                    console.log(error);\n                                    self.error = true;\n                                    if (error.code == \"auth/weak-password\")\n                                        self.errorMessage = self.messages.SR_001_PASS_MIN;\n                                    else\n                                        self.errorMessage = self.messages.SR_001_PASS_SAVE_FAIL;\n                                });\n                            } else {\n                                self.error = true;\n                            }\n                        }).catch(function (error) {\n                            console.log(error);\n                            if (error.code == \"auth/wrong-password\")\n                                self.errorMessage = self.messages.SR_001_WRONG_PASS;\n                            else\n                                self.errorMessage = error;\n                            self.error = true;\n                        });\n                    } else {\n                        self.errorMessage = \"User không tồn tại\";\n                        self.error = true;\n                    }\n                } else {\n                    self.errorMessage = \"User không tồn tại\";\n                    self.error = true;\n                }\n\n\n            }\n        }\n\n    });\n</script>\n"]}]}